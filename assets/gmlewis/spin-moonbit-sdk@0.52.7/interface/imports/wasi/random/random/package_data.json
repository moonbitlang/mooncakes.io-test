{
  "name": "gmlewis/spin-moonbit-sdk/interface/imports/wasi/random/random",
  "traits": [],
  "types": [],
  "typealias": [],
  "values": [
    {
      "name": "get_random_bytes",
      "docstring": "\n Return `len` cryptographically-secure random or pseudo-random bytes.\n\n This function must produce data at least as cryptographically secure and\n fast as an adequately seeded cryptographically-secure pseudo-random\n number generator (CSPRNG). It must not block, from the perspective of\n the calling program, under any circumstances, including on the first\n request and on requests for numbers of bytes. The returned data must\n always be unpredictable.\n\n This function must always return fresh data. Deterministic environments\n must omit this function, rather than implementing it with deterministic\n data.",
      "signature": "fn get_random_bytes(len : UInt64) -> Bytes",
      "loc": {
        "path": "gmlewis/spin-moonbit-sdk/interface/imports/wasi/random/random",
        "file": "top.mbt",
        "line": 16,
        "column": 8
      }
    },
    {
      "name": "get_random_u64",
      "docstring": "\n Return a cryptographically-secure random or pseudo-random `u64` value.\n\n This function returns the same type of data as `get-random-bytes`,\n represented as a `u64`.",
      "signature": "fn get_random_u64() -> UInt64",
      "loc": {
        "path": "gmlewis/spin-moonbit-sdk/interface/imports/wasi/random/random",
        "file": "top.mbt",
        "line": 29,
        "column": 8
      }
    }
  ],
  "misc": []
}