{
  "name": "gmlewis/spin-moonbit-sdk/interface/imports/sqlite",
  "traits": [],
  "types": [
    {
      "name": "Connection",
      "docstring": "\n A handle to an open sqlite instance",
      "signature": "pub(all) type Connection Int",
      "loc": {
        "path": "gmlewis/spin-moonbit-sdk/interface/imports/sqlite",
        "file": "top.mbt",
        "line": 5,
        "column": 15
      },
      "methods": [
        {
          "name": "drop",
          "docstring": "",
          "signature": "fn <a href=\"gmlewis/spin-moonbit-sdk/interface/imports/sqlite#Connection\">Connection</a>::drop(self : <a href=\"gmlewis/spin-moonbit-sdk/interface/imports/sqlite#Connection\">Connection</a>) -> Unit",
          "loc": {
            "path": "gmlewis/spin-moonbit-sdk/interface/imports/sqlite",
            "file": "top.mbt",
            "line": 11,
            "column": 20
          }
        },
        {
          "name": "execute",
          "docstring": "\n Execute a statement returning back data if there is any",
          "signature": "fn <a href=\"gmlewis/spin-moonbit-sdk/interface/imports/sqlite#Connection\">Connection</a>::execute(self : <a href=\"gmlewis/spin-moonbit-sdk/interface/imports/sqlite#Connection\">Connection</a>, statement : String, parameters : <a href=\"moonbitlang/core/array#Array\">Array</a>[<a href=\"gmlewis/spin-moonbit-sdk/interface/imports/sqlite#Value\">Value</a>]) -> <a href=\"moonbitlang/core/result#Result\">Result</a>[<a href=\"gmlewis/spin-moonbit-sdk/interface/imports/sqlite#QueryResult\">QueryResult</a>, <a href=\"gmlewis/spin-moonbit-sdk/interface/imports/sqlite#Error_\">Error_</a>]",
          "loc": {
            "path": "gmlewis/spin-moonbit-sdk/interface/imports/sqlite",
            "file": "top.mbt",
            "line": 86,
            "column": 20
          }
        },
        {
          "name": "open",
          "docstring": "\n Open a connection to a named database instance.\n\n If `database` is \"default\", the default instance is opened.\n\n `error::no-such-database` will be raised if the `name` is not recognized.",
          "signature": "fn <a href=\"gmlewis/spin-moonbit-sdk/interface/imports/sqlite#Connection\">Connection</a>::open(database : String) -> <a href=\"moonbitlang/core/result#Result\">Result</a>[<a href=\"gmlewis/spin-moonbit-sdk/interface/imports/sqlite#Connection\">Connection</a>, <a href=\"gmlewis/spin-moonbit-sdk/interface/imports/sqlite#Error_\">Error_</a>]",
          "loc": {
            "path": "gmlewis/spin-moonbit-sdk/interface/imports/sqlite",
            "file": "top.mbt",
            "line": 54,
            "column": 20
          }
        }
      ],
      "impls": [
        {
          "self": {
            "kind": "constr",
            "constructor": {
              "name": "Connection",
              "path": "gmlewis/spin-moonbit-sdk/interface/imports/sqlite"
            },
            "arguments": []
          },
          "trait": { "name": "Eq", "path": "moonbitlang/core/builtin" },
          "methods": [
            {
              "name": "op_equal",
              "docstring": "automatically derived",
              "signature": "fn op_equal(<a href=\"gmlewis/spin-moonbit-sdk/interface/imports/sqlite#Connection\">Connection</a>, <a href=\"gmlewis/spin-moonbit-sdk/interface/imports/sqlite#Connection\">Connection</a>) -> Bool",
              "loc": {
                "path": "gmlewis/spin-moonbit-sdk/interface/imports/sqlite",
                "file": "top.mbt",
                "line": 5,
                "column": 43
              }
            }
          ]
        },
        {
          "self": {
            "kind": "constr",
            "constructor": {
              "name": "Connection",
              "path": "gmlewis/spin-moonbit-sdk/interface/imports/sqlite"
            },
            "arguments": []
          },
          "trait": { "name": "Show", "path": "moonbitlang/core/builtin" },
          "methods": [
            {
              "name": "output",
              "docstring": "automatically derived",
              "signature": "fn output(<a href=\"gmlewis/spin-moonbit-sdk/interface/imports/sqlite#Connection\">Connection</a>, <a href=\"moonbitlang/core/builtin#Logger\">Logger</a>) -> Unit",
              "loc": {
                "path": "gmlewis/spin-moonbit-sdk/interface/imports/sqlite",
                "file": "top.mbt",
                "line": 5,
                "column": 37
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Error_",
      "docstring": "\n The set of errors which may be raised by functions in this interface",
      "signature": "pub(all) enum Error_ {\n  NoSuchDatabase\n  AccessDenied\n  InvalidConnection\n  DatabaseFull\n  Io(String)\n}",
      "loc": {
        "path": "gmlewis/spin-moonbit-sdk/interface/imports/sqlite",
        "file": "top.mbt",
        "line": 17,
        "column": 15
      },
      "methods": [],
      "impls": [
        {
          "self": {
            "kind": "constr",
            "constructor": {
              "name": "Error_",
              "path": "gmlewis/spin-moonbit-sdk/interface/imports/sqlite"
            },
            "arguments": []
          },
          "trait": { "name": "Eq", "path": "moonbitlang/core/builtin" },
          "methods": [
            {
              "name": "op_equal",
              "docstring": "automatically derived",
              "signature": "fn op_equal(<a href=\"gmlewis/spin-moonbit-sdk/interface/imports/sqlite#Error_\">Error_</a>, <a href=\"gmlewis/spin-moonbit-sdk/interface/imports/sqlite#Error_\">Error_</a>) -> Bool",
              "loc": {
                "path": "gmlewis/spin-moonbit-sdk/interface/imports/sqlite",
                "file": "top.mbt",
                "line": 23,
                "column": 16
              }
            }
          ]
        },
        {
          "self": {
            "kind": "constr",
            "constructor": {
              "name": "Error_",
              "path": "gmlewis/spin-moonbit-sdk/interface/imports/sqlite"
            },
            "arguments": []
          },
          "trait": { "name": "Show", "path": "moonbitlang/core/builtin" },
          "methods": [
            {
              "name": "output",
              "docstring": "automatically derived",
              "signature": "fn output(<a href=\"gmlewis/spin-moonbit-sdk/interface/imports/sqlite#Error_\">Error_</a>, <a href=\"moonbitlang/core/builtin#Logger\">Logger</a>) -> Unit",
              "loc": {
                "path": "gmlewis/spin-moonbit-sdk/interface/imports/sqlite",
                "file": "top.mbt",
                "line": 23,
                "column": 10
              }
            }
          ]
        }
      ]
    },
    {
      "name": "QueryResult",
      "docstring": "\n A result of a query",
      "signature": "pub(all) struct QueryResult {\n  columns : <a href=\"moonbitlang/core/array#Array\">Array</a>[String]\n  rows : <a href=\"moonbitlang/core/array#Array\">Array</a>[<a href=\"gmlewis/spin-moonbit-sdk/interface/imports/sqlite#RowResult\">RowResult</a>]\n}",
      "loc": {
        "path": "gmlewis/spin-moonbit-sdk/interface/imports/sqlite",
        "file": "top.mbt",
        "line": 43,
        "column": 17
      },
      "methods": [],
      "impls": [
        {
          "self": {
            "kind": "constr",
            "constructor": {
              "name": "QueryResult",
              "path": "gmlewis/spin-moonbit-sdk/interface/imports/sqlite"
            },
            "arguments": []
          },
          "trait": { "name": "Eq", "path": "moonbitlang/core/builtin" },
          "methods": [
            {
              "name": "op_equal",
              "docstring": "automatically derived",
              "signature": "fn op_equal(<a href=\"gmlewis/spin-moonbit-sdk/interface/imports/sqlite#QueryResult\">QueryResult</a>, <a href=\"gmlewis/spin-moonbit-sdk/interface/imports/sqlite#QueryResult\">QueryResult</a>) -> Bool",
              "loc": {
                "path": "gmlewis/spin-moonbit-sdk/interface/imports/sqlite",
                "file": "top.mbt",
                "line": 46,
                "column": 16
              }
            }
          ]
        },
        {
          "self": {
            "kind": "constr",
            "constructor": {
              "name": "QueryResult",
              "path": "gmlewis/spin-moonbit-sdk/interface/imports/sqlite"
            },
            "arguments": []
          },
          "trait": { "name": "Show", "path": "moonbitlang/core/builtin" },
          "methods": [
            {
              "name": "output",
              "docstring": "automatically derived",
              "signature": "fn output(<a href=\"gmlewis/spin-moonbit-sdk/interface/imports/sqlite#QueryResult\">QueryResult</a>, <a href=\"moonbitlang/core/builtin#Logger\">Logger</a>) -> Unit",
              "loc": {
                "path": "gmlewis/spin-moonbit-sdk/interface/imports/sqlite",
                "file": "top.mbt",
                "line": 46,
                "column": 10
              }
            }
          ]
        }
      ]
    },
    {
      "name": "RowResult",
      "docstring": "\n A set of values for each of the columns in a query-result",
      "signature": "pub(all) struct RowResult {\n  values : <a href=\"moonbitlang/core/array#Array\">Array</a>[<a href=\"gmlewis/spin-moonbit-sdk/interface/imports/sqlite#Value\">Value</a>]\n}",
      "loc": {
        "path": "gmlewis/spin-moonbit-sdk/interface/imports/sqlite",
        "file": "top.mbt",
        "line": 37,
        "column": 17
      },
      "methods": [],
      "impls": [
        {
          "self": {
            "kind": "constr",
            "constructor": {
              "name": "RowResult",
              "path": "gmlewis/spin-moonbit-sdk/interface/imports/sqlite"
            },
            "arguments": []
          },
          "trait": { "name": "Eq", "path": "moonbitlang/core/builtin" },
          "methods": [
            {
              "name": "op_equal",
              "docstring": "automatically derived",
              "signature": "fn op_equal(<a href=\"gmlewis/spin-moonbit-sdk/interface/imports/sqlite#RowResult\">RowResult</a>, <a href=\"gmlewis/spin-moonbit-sdk/interface/imports/sqlite#RowResult\">RowResult</a>) -> Bool",
              "loc": {
                "path": "gmlewis/spin-moonbit-sdk/interface/imports/sqlite",
                "file": "top.mbt",
                "line": 39,
                "column": 16
              }
            }
          ]
        },
        {
          "self": {
            "kind": "constr",
            "constructor": {
              "name": "RowResult",
              "path": "gmlewis/spin-moonbit-sdk/interface/imports/sqlite"
            },
            "arguments": []
          },
          "trait": { "name": "Show", "path": "moonbitlang/core/builtin" },
          "methods": [
            {
              "name": "output",
              "docstring": "automatically derived",
              "signature": "fn output(<a href=\"gmlewis/spin-moonbit-sdk/interface/imports/sqlite#RowResult\">RowResult</a>, <a href=\"moonbitlang/core/builtin#Logger\">Logger</a>) -> Unit",
              "loc": {
                "path": "gmlewis/spin-moonbit-sdk/interface/imports/sqlite",
                "file": "top.mbt",
                "line": 39,
                "column": 10
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Value",
      "docstring": "\n A single column's result from a database query",
      "signature": "pub(all) enum Value {\n  Integer(Int64)\n  Real(Double)\n  Text(String)\n  Blob(Bytes)\n  Null\n}",
      "loc": {
        "path": "gmlewis/spin-moonbit-sdk/interface/imports/sqlite",
        "file": "top.mbt",
        "line": 27,
        "column": 15
      },
      "methods": [],
      "impls": [
        {
          "self": {
            "kind": "constr",
            "constructor": {
              "name": "Value",
              "path": "gmlewis/spin-moonbit-sdk/interface/imports/sqlite"
            },
            "arguments": []
          },
          "trait": { "name": "Eq", "path": "moonbitlang/core/builtin" },
          "methods": [
            {
              "name": "op_equal",
              "docstring": "automatically derived",
              "signature": "fn op_equal(<a href=\"gmlewis/spin-moonbit-sdk/interface/imports/sqlite#Value\">Value</a>, <a href=\"gmlewis/spin-moonbit-sdk/interface/imports/sqlite#Value\">Value</a>) -> Bool",
              "loc": {
                "path": "gmlewis/spin-moonbit-sdk/interface/imports/sqlite",
                "file": "top.mbt",
                "line": 33,
                "column": 16
              }
            }
          ]
        },
        {
          "self": {
            "kind": "constr",
            "constructor": {
              "name": "Value",
              "path": "gmlewis/spin-moonbit-sdk/interface/imports/sqlite"
            },
            "arguments": []
          },
          "trait": { "name": "Show", "path": "moonbitlang/core/builtin" },
          "methods": [
            {
              "name": "output",
              "docstring": "automatically derived",
              "signature": "fn output(<a href=\"gmlewis/spin-moonbit-sdk/interface/imports/sqlite#Value\">Value</a>, <a href=\"moonbitlang/core/builtin#Logger\">Logger</a>) -> Unit",
              "loc": {
                "path": "gmlewis/spin-moonbit-sdk/interface/imports/sqlite",
                "file": "top.mbt",
                "line": 33,
                "column": 10
              }
            }
          ]
        }
      ]
    }
  ],
  "typealias": [],
  "values": [],
  "misc": []
}