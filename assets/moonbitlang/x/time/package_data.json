{
  "name": "moonbitlang/x/time",
  "traits": [],
  "types": [
    {
      "name": "Duration",
      "docstring": " An amount of time with nanosecond precision.",
      "signature": "type Duration",
      "loc": {
        "path": "moonbitlang/x/time",
        "file": "duration.mbt",
        "line": 16,
        "column": 8
      },
      "methods": [
        {
          "name": "add_duration",
          "docstring": " Adds other duration to this duration, and returns a new duration.",
          "signature": "fn <a href=\"moonbitlang/x/time#Duration\">Duration</a>::add_duration(self : <a href=\"moonbitlang/x/time#Duration\">Duration</a>, other : <a href=\"moonbitlang/x/time#Duration\">Duration</a>) -> <a href=\"moonbitlang/x/time#Duration\">Duration</a>!<a href=\"moonbitlang/core/error#Error\">Error</a>",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "duration.mbt",
            "line": 213,
            "column": 8
          }
        },
        {
          "name": "add_hours",
          "docstring": " Adds specified hours to this duration, and returns a new duration.",
          "signature": "fn <a href=\"moonbitlang/x/time#Duration\">Duration</a>::add_hours(self : <a href=\"moonbitlang/x/time#Duration\">Duration</a>, hours : Int64) -> <a href=\"moonbitlang/x/time#Duration\">Duration</a>!<a href=\"moonbitlang/core/error#Error\">Error</a>",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "duration.mbt",
            "line": 167,
            "column": 8
          }
        },
        {
          "name": "add_minutes",
          "docstring": " Adds specified minutes to this duration, and returns a new duration.",
          "signature": "fn <a href=\"moonbitlang/x/time#Duration\">Duration</a>::add_minutes(self : <a href=\"moonbitlang/x/time#Duration\">Duration</a>, minutes : Int64) -> <a href=\"moonbitlang/x/time#Duration\">Duration</a>!<a href=\"moonbitlang/core/error#Error\">Error</a>",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "duration.mbt",
            "line": 179,
            "column": 8
          }
        },
        {
          "name": "add_nanoseconds",
          "docstring": " Adds specified nanoseconds to this duration, and returns a new duration.",
          "signature": "fn <a href=\"moonbitlang/x/time#Duration\">Duration</a>::add_nanoseconds(self : <a href=\"moonbitlang/x/time#Duration\">Duration</a>, nanoseconds : Int64) -> <a href=\"moonbitlang/x/time#Duration\">Duration</a>!<a href=\"moonbitlang/core/error#Error\">Error</a>",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "duration.mbt",
            "line": 200,
            "column": 8
          }
        },
        {
          "name": "add_seconds",
          "docstring": " Adds specified seconds to this duration, and returns a new duration.",
          "signature": "fn <a href=\"moonbitlang/x/time#Duration\">Duration</a>::add_seconds(self : <a href=\"moonbitlang/x/time#Duration\">Duration</a>, seconds : Int64) -> <a href=\"moonbitlang/x/time#Duration\">Duration</a>!<a href=\"moonbitlang/core/error#Error\">Error</a>",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "duration.mbt",
            "line": 191,
            "column": 8
          }
        },
        {
          "name": "from_string",
          "docstring": " Parses a ISO 8601 format string like `PT[n]H[n]M[n].[n]S`.",
          "signature": "fn <a href=\"moonbitlang/x/time#Duration\">Duration</a>::from_string(str : String) -> <a href=\"moonbitlang/x/time#Duration\">Duration</a>!<a href=\"moonbitlang/core/error#Error\">Error</a>",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "duration.mbt",
            "line": 53,
            "column": 18
          }
        },
        {
          "name": "is_neg",
          "docstring": " Checks if this duration is negative.",
          "signature": "fn <a href=\"moonbitlang/x/time#Duration\">Duration</a>::is_neg(self : <a href=\"moonbitlang/x/time#Duration\">Duration</a>) -> Bool",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "duration.mbt",
            "line": 162,
            "column": 8
          }
        },
        {
          "name": "is_zero",
          "docstring": " Checks if this duration is zero length.",
          "signature": "fn <a href=\"moonbitlang/x/time#Duration\">Duration</a>::is_zero(self : <a href=\"moonbitlang/x/time#Duration\">Duration</a>) -> Bool",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "duration.mbt",
            "line": 157,
            "column": 8
          }
        },
        {
          "name": "nanoseconds",
          "docstring": " Returns the number of nanoseconds in this duration.",
          "signature": "fn <a href=\"moonbitlang/x/time#Duration\">Duration</a>::nanoseconds(self : <a href=\"moonbitlang/x/time#Duration\">Duration</a>) -> Int",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "duration.mbt",
            "line": 152,
            "column": 8
          }
        },
        {
          "name": "of",
          "docstring": " Creates a Duration from hours, minutes, seconds and nanoseconds.",
          "signature": "fn <a href=\"moonbitlang/x/time#Duration\">Duration</a>::of(hours~ : Int64 = .., minutes~ : Int64 = .., seconds~ : Int64 = .., nanoseconds~ : Int64 = ..) -> <a href=\"moonbitlang/x/time#Duration\">Duration</a>!<a href=\"moonbitlang/core/error#Error\">Error</a>",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "duration.mbt",
            "line": 22,
            "column": 18
          }
        },
        {
          "name": "op_add",
          "docstring": "",
          "signature": "fn <a href=\"moonbitlang/x/time#Duration\">Duration</a>::op_add(self : <a href=\"moonbitlang/x/time#Duration\">Duration</a>, other : <a href=\"moonbitlang/x/time#Duration\">Duration</a>) -> <a href=\"moonbitlang/x/time#Duration\">Duration</a>!<a href=\"moonbitlang/core/error#Error\">Error</a>",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "duration.mbt",
            "line": 229,
            "column": 8
          }
        },
        {
          "name": "seconds",
          "docstring": " Returns the number of seconds in this duration.",
          "signature": "fn <a href=\"moonbitlang/x/time#Duration\">Duration</a>::seconds(self : <a href=\"moonbitlang/x/time#Duration\">Duration</a>) -> Int64",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "duration.mbt",
            "line": 147,
            "column": 8
          }
        },
        {
          "name": "to_nanoseconds",
          "docstring": " Converts this duration to the total length in nanoseconds.",
          "signature": "fn <a href=\"moonbitlang/x/time#Duration\">Duration</a>::to_nanoseconds(self : <a href=\"moonbitlang/x/time#Duration\">Duration</a>) -> Int64",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "duration.mbt",
            "line": 250,
            "column": 8
          }
        },
        {
          "name": "to_string",
          "docstring": " Returns a string representation of this duration using ISO 8601 representation.",
          "signature": "fn <a href=\"moonbitlang/x/time#Duration\">Duration</a>::to_string(self : <a href=\"moonbitlang/x/time#Duration\">Duration</a>) -> String",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "duration.mbt",
            "line": 102,
            "column": 8
          }
        },
        {
          "name": "with_nanoseconds",
          "docstring": " Returns a new duration with the specified nanosecond of second.",
          "signature": "fn <a href=\"moonbitlang/x/time#Duration\">Duration</a>::with_nanoseconds(self : <a href=\"moonbitlang/x/time#Duration\">Duration</a>, nanoseconds : Int) -> <a href=\"moonbitlang/x/time#Duration\">Duration</a>!<a href=\"moonbitlang/core/error#Error\">Error</a>",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "duration.mbt",
            "line": 242,
            "column": 8
          }
        },
        {
          "name": "with_seconds",
          "docstring": " Returns a new duration with the specified amount of seconds.",
          "signature": "fn <a href=\"moonbitlang/x/time#Duration\">Duration</a>::with_seconds(self : <a href=\"moonbitlang/x/time#Duration\">Duration</a>, seconds : Int64) -> <a href=\"moonbitlang/x/time#Duration\">Duration</a>",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "duration.mbt",
            "line": 234,
            "column": 8
          }
        },
        {
          "name": "zero",
          "docstring": " Returns a zero length duration.",
          "signature": "fn <a href=\"moonbitlang/x/time#Duration\">Duration</a>::zero() -> <a href=\"moonbitlang/x/time#Duration\">Duration</a>",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "duration.mbt",
            "line": 48,
            "column": 18
          }
        }
      ],
      "impls": [
        {
          "self": {
            "kind": "constr",
            "constructor": {
              "name": "Duration",
              "path": "moonbitlang/x/time"
            },
            "arguments": []
          },
          "trait": { "name": "Compare", "path": "moonbitlang/core/builtin" },
          "methods": [
            {
              "name": "compare",
              "docstring": "automatically derived",
              "signature": "fn compare(<a href=\"moonbitlang/x/time#Duration\">Duration</a>, <a href=\"moonbitlang/x/time#Duration\">Duration</a>) -> Int",
              "loc": {
                "path": "moonbitlang/x/time",
                "file": "duration.mbt",
                "line": 19,
                "column": 14
              }
            }
          ]
        },
        {
          "self": {
            "kind": "constr",
            "constructor": {
              "name": "Duration",
              "path": "moonbitlang/x/time"
            },
            "arguments": []
          },
          "trait": { "name": "Eq", "path": "moonbitlang/core/builtin" },
          "methods": [
            {
              "name": "op_equal",
              "docstring": "automatically derived",
              "signature": "fn op_equal(<a href=\"moonbitlang/x/time#Duration\">Duration</a>, <a href=\"moonbitlang/x/time#Duration\">Duration</a>) -> Bool",
              "loc": {
                "path": "moonbitlang/x/time",
                "file": "duration.mbt",
                "line": 19,
                "column": 10
              }
            }
          ]
        },
        {
          "self": {
            "kind": "constr",
            "constructor": {
              "name": "Duration",
              "path": "moonbitlang/x/time"
            },
            "arguments": []
          },
          "trait": { "name": "Show", "path": "moonbitlang/core/builtin" },
          "methods": [
            {
              "name": "output",
              "docstring": "",
              "signature": "fn output(self : <a href=\"moonbitlang/x/time#Duration\">Duration</a>, logger : <a href=\"moonbitlang/core/builtin#Logger\">Logger</a>) -> Unit",
              "loc": {
                "path": "moonbitlang/x/time",
                "file": "duration.mbt",
                "line": 142,
                "column": 33
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Period",
      "docstring": " An amount of time representing by years, months and days in the ISO-8601 calendar system.",
      "signature": "type Period",
      "loc": {
        "path": "moonbitlang/x/time",
        "file": "period.mbt",
        "line": 16,
        "column": 8
      },
      "methods": [
        {
          "name": "add_days",
          "docstring": " Adds specified days to this period, and returns a new period.",
          "signature": "fn <a href=\"moonbitlang/x/time#Period\">Period</a>::add_days(self : <a href=\"moonbitlang/x/time#Period\">Period</a>, days : Int) -> <a href=\"moonbitlang/x/time#Period\">Period</a>!<a href=\"moonbitlang/core/error#Error\">Error</a>",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "period.mbt",
            "line": 139,
            "column": 8
          }
        },
        {
          "name": "add_months",
          "docstring": " Adds specified months to this period, and returns a new period.",
          "signature": "fn <a href=\"moonbitlang/x/time#Period\">Period</a>::add_months(self : <a href=\"moonbitlang/x/time#Period\">Period</a>, months : Int) -> <a href=\"moonbitlang/x/time#Period\">Period</a>!<a href=\"moonbitlang/core/error#Error\">Error</a>",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "period.mbt",
            "line": 130,
            "column": 8
          }
        },
        {
          "name": "add_period",
          "docstring": " Adds other period to this period, and returns a new period.",
          "signature": "fn <a href=\"moonbitlang/x/time#Period\">Period</a>::add_period(self : <a href=\"moonbitlang/x/time#Period\">Period</a>, other : <a href=\"moonbitlang/x/time#Period\">Period</a>) -> <a href=\"moonbitlang/x/time#Period\">Period</a>!<a href=\"moonbitlang/core/error#Error\">Error</a>",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "period.mbt",
            "line": 148,
            "column": 8
          }
        },
        {
          "name": "add_weeks",
          "docstring": " Adds specified weeks to this period, and returns a new period.",
          "signature": "fn <a href=\"moonbitlang/x/time#Period\">Period</a>::add_weeks(self : <a href=\"moonbitlang/x/time#Period\">Period</a>, weeks : Int) -> <a href=\"moonbitlang/x/time#Period\">Period</a>!<a href=\"moonbitlang/core/error#Error\">Error</a>",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "period.mbt",
            "line": 121,
            "column": 8
          }
        },
        {
          "name": "add_years",
          "docstring": " Adds specified years to this period, and returns a new period.",
          "signature": "fn <a href=\"moonbitlang/x/time#Period\">Period</a>::add_years(self : <a href=\"moonbitlang/x/time#Period\">Period</a>, years : Int) -> <a href=\"moonbitlang/x/time#Period\">Period</a>!<a href=\"moonbitlang/core/error#Error\">Error</a>",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "period.mbt",
            "line": 112,
            "column": 8
          }
        },
        {
          "name": "days",
          "docstring": " Returns the number of days in this duration.",
          "signature": "fn <a href=\"moonbitlang/x/time#Period\">Period</a>::days(self : <a href=\"moonbitlang/x/time#Period\">Period</a>) -> Int",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "period.mbt",
            "line": 107,
            "column": 8
          }
        },
        {
          "name": "from_string",
          "docstring": " Parses a ISO 8601 format string like `P[n]Y[n]M[n]D`.",
          "signature": "fn <a href=\"moonbitlang/x/time#Period\">Period</a>::from_string(str : String) -> <a href=\"moonbitlang/x/time#Period\">Period</a>!<a href=\"moonbitlang/core/error#Error\">Error</a>",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "period.mbt",
            "line": 37,
            "column": 16
          }
        },
        {
          "name": "is_neg",
          "docstring": " Checks if this period is negative.",
          "signature": "fn <a href=\"moonbitlang/x/time#Period\">Period</a>::is_neg(self : <a href=\"moonbitlang/x/time#Period\">Period</a>) -> Bool",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "period.mbt",
            "line": 220,
            "column": 16
          }
        },
        {
          "name": "is_zero",
          "docstring": " Checks if this period is zero length.",
          "signature": "fn <a href=\"moonbitlang/x/time#Period\">Period</a>::is_zero(self : <a href=\"moonbitlang/x/time#Period\">Period</a>) -> Bool",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "period.mbt",
            "line": 215,
            "column": 16
          }
        },
        {
          "name": "months",
          "docstring": " Returns the number of months in this duration.",
          "signature": "fn <a href=\"moonbitlang/x/time#Period\">Period</a>::months(self : <a href=\"moonbitlang/x/time#Period\">Period</a>) -> Int",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "period.mbt",
            "line": 102,
            "column": 8
          }
        },
        {
          "name": "multiply",
          "docstring": " Returns a new period with all elements in this period multiplied by the specified value.",
          "signature": "fn <a href=\"moonbitlang/x/time#Period\">Period</a>::multiply(self : <a href=\"moonbitlang/x/time#Period\">Period</a>, n : Int) -> <a href=\"moonbitlang/x/time#Period\">Period</a>!<a href=\"moonbitlang/core/error#Error\">Error</a>",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "period.mbt",
            "line": 169,
            "column": 8
          }
        },
        {
          "name": "negated",
          "docstring": " Returns a new period with all elements in this period negated.",
          "signature": "fn <a href=\"moonbitlang/x/time#Period\">Period</a>::negated(self : <a href=\"moonbitlang/x/time#Period\">Period</a>) -> <a href=\"moonbitlang/x/time#Period\">Period</a>!<a href=\"moonbitlang/core/error#Error\">Error</a>",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "period.mbt",
            "line": 183,
            "column": 8
          }
        },
        {
          "name": "of",
          "docstring": " Creates a Period from years, months, and days.",
          "signature": "fn <a href=\"moonbitlang/x/time#Period\">Period</a>::of(years~ : Int = .., months~ : Int = .., days~ : Int = ..) -> <a href=\"moonbitlang/x/time#Period\">Period</a>",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "period.mbt",
            "line": 23,
            "column": 16
          }
        },
        {
          "name": "op_add",
          "docstring": "",
          "signature": "fn <a href=\"moonbitlang/x/time#Period\">Period</a>::op_add(self : <a href=\"moonbitlang/x/time#Period\">Period</a>, other : <a href=\"moonbitlang/x/time#Period\">Period</a>) -> <a href=\"moonbitlang/x/time#Period\">Period</a>!<a href=\"moonbitlang/core/error#Error\">Error</a>",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "period.mbt",
            "line": 159,
            "column": 16
          }
        },
        {
          "name": "op_sub",
          "docstring": "",
          "signature": "fn <a href=\"moonbitlang/x/time#Period\">Period</a>::op_sub(self : <a href=\"moonbitlang/x/time#Period\">Period</a>, other : <a href=\"moonbitlang/x/time#Period\">Period</a>) -> <a href=\"moonbitlang/x/time#Period\">Period</a>!<a href=\"moonbitlang/core/error#Error\">Error</a>",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "period.mbt",
            "line": 164,
            "column": 8
          }
        },
        {
          "name": "to_string",
          "docstring": " Returns a string representation of this period using ISO 8601 representation.",
          "signature": "fn <a href=\"moonbitlang/x/time#Period\">Period</a>::to_string(self : <a href=\"moonbitlang/x/time#Period\">Period</a>) -> String",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "period.mbt",
            "line": 70,
            "column": 16
          }
        },
        {
          "name": "to_total_months",
          "docstring": " Returns the total number of months in this period.",
          "signature": "fn <a href=\"moonbitlang/x/time#Period\">Period</a>::to_total_months(self : <a href=\"moonbitlang/x/time#Period\">Period</a>) -> Int64",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "period.mbt",
            "line": 225,
            "column": 8
          }
        },
        {
          "name": "with_days",
          "docstring": " Returns a new period with the specified amount of days.",
          "signature": "fn <a href=\"moonbitlang/x/time#Period\">Period</a>::with_days(self : <a href=\"moonbitlang/x/time#Period\">Period</a>, days : Int) -> <a href=\"moonbitlang/x/time#Period\">Period</a>",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "period.mbt",
            "line": 206,
            "column": 8
          }
        },
        {
          "name": "with_months",
          "docstring": " Returns a new period with the specified amount of months.",
          "signature": "fn <a href=\"moonbitlang/x/time#Period\">Period</a>::with_months(self : <a href=\"moonbitlang/x/time#Period\">Period</a>, months : Int) -> <a href=\"moonbitlang/x/time#Period\">Period</a>",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "period.mbt",
            "line": 197,
            "column": 8
          }
        },
        {
          "name": "with_years",
          "docstring": " Returns a new period with the specified amount of years.",
          "signature": "fn <a href=\"moonbitlang/x/time#Period\">Period</a>::with_years(self : <a href=\"moonbitlang/x/time#Period\">Period</a>, years : Int) -> <a href=\"moonbitlang/x/time#Period\">Period</a>",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "period.mbt",
            "line": 188,
            "column": 8
          }
        },
        {
          "name": "years",
          "docstring": " Returns the number of years in this duration.",
          "signature": "fn <a href=\"moonbitlang/x/time#Period\">Period</a>::years(self : <a href=\"moonbitlang/x/time#Period\">Period</a>) -> Int",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "period.mbt",
            "line": 97,
            "column": 8
          }
        },
        {
          "name": "zero",
          "docstring": " Returns a zero length period.",
          "signature": "fn <a href=\"moonbitlang/x/time#Period\">Period</a>::zero() -> <a href=\"moonbitlang/x/time#Period\">Period</a>",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "period.mbt",
            "line": 32,
            "column": 16
          }
        }
      ],
      "impls": [
        {
          "self": {
            "kind": "constr",
            "constructor": { "name": "Period", "path": "moonbitlang/x/time" },
            "arguments": []
          },
          "trait": { "name": "Compare", "path": "moonbitlang/core/builtin" },
          "methods": [
            {
              "name": "compare",
              "docstring": "automatically derived",
              "signature": "fn compare(<a href=\"moonbitlang/x/time#Period\">Period</a>, <a href=\"moonbitlang/x/time#Period\">Period</a>) -> Int",
              "loc": {
                "path": "moonbitlang/x/time",
                "file": "period.mbt",
                "line": 20,
                "column": 14
              }
            }
          ]
        },
        {
          "self": {
            "kind": "constr",
            "constructor": { "name": "Period", "path": "moonbitlang/x/time" },
            "arguments": []
          },
          "trait": { "name": "Eq", "path": "moonbitlang/core/builtin" },
          "methods": [
            {
              "name": "op_equal",
              "docstring": "automatically derived",
              "signature": "fn op_equal(<a href=\"moonbitlang/x/time#Period\">Period</a>, <a href=\"moonbitlang/x/time#Period\">Period</a>) -> Bool",
              "loc": {
                "path": "moonbitlang/x/time",
                "file": "period.mbt",
                "line": 20,
                "column": 10
              }
            }
          ]
        },
        {
          "self": {
            "kind": "constr",
            "constructor": { "name": "Period", "path": "moonbitlang/x/time" },
            "arguments": []
          },
          "trait": { "name": "Show", "path": "moonbitlang/core/builtin" },
          "methods": [
            {
              "name": "output",
              "docstring": "",
              "signature": "fn output(self : <a href=\"moonbitlang/x/time#Period\">Period</a>, logger : <a href=\"moonbitlang/core/builtin#Logger\">Logger</a>) -> Unit",
              "loc": {
                "path": "moonbitlang/x/time",
                "file": "period.mbt",
                "line": 92,
                "column": 31
              }
            }
          ]
        }
      ]
    },
    {
      "name": "PlainDate",
      "docstring": " A date without a time zone in the ISO 8601 calendar system.",
      "signature": "type PlainDate",
      "loc": {
        "path": "moonbitlang/x/time",
        "file": "plain_date.mbt",
        "line": 16,
        "column": 8
      },
      "methods": [
        {
          "name": "add_days",
          "docstring": " Adds specified days to this date, and returns a new date.",
          "signature": "fn <a href=\"moonbitlang/x/time#PlainDate\">PlainDate</a>::add_days(self : <a href=\"moonbitlang/x/time#PlainDate\">PlainDate</a>, days : Int64) -> <a href=\"moonbitlang/x/time#PlainDate\">PlainDate</a>!<a href=\"moonbitlang/core/error#Error\">Error</a>",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "plain_date.mbt",
            "line": 309,
            "column": 19
          }
        },
        {
          "name": "add_months",
          "docstring": " Adds specified months to this date, and returns a new date.",
          "signature": "fn <a href=\"moonbitlang/x/time#PlainDate\">PlainDate</a>::add_months(self : <a href=\"moonbitlang/x/time#PlainDate\">PlainDate</a>, months : Int64) -> <a href=\"moonbitlang/x/time#PlainDate\">PlainDate</a>!<a href=\"moonbitlang/core/error#Error\">Error</a>",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "plain_date.mbt",
            "line": 277,
            "column": 19
          }
        },
        {
          "name": "add_period",
          "docstring": " Adds a period to this date, and returns a new date.",
          "signature": "fn <a href=\"moonbitlang/x/time#PlainDate\">PlainDate</a>::add_period(self : <a href=\"moonbitlang/x/time#PlainDate\">PlainDate</a>, period : <a href=\"moonbitlang/x/time#Period\">Period</a>) -> <a href=\"moonbitlang/x/time#PlainDate\">PlainDate</a>!<a href=\"moonbitlang/core/error#Error\">Error</a>",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "plain_date.mbt",
            "line": 320,
            "column": 19
          }
        },
        {
          "name": "add_weeks",
          "docstring": " Adds specified weeks to this date, and returns a new date.",
          "signature": "fn <a href=\"moonbitlang/x/time#PlainDate\">PlainDate</a>::add_weeks(self : <a href=\"moonbitlang/x/time#PlainDate\">PlainDate</a>, weeks : Int64) -> <a href=\"moonbitlang/x/time#PlainDate\">PlainDate</a>!<a href=\"moonbitlang/core/error#Error\">Error</a>",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "plain_date.mbt",
            "line": 300,
            "column": 19
          }
        },
        {
          "name": "add_years",
          "docstring": " Adds specified years to this date, and returns a new date.",
          "signature": "fn <a href=\"moonbitlang/x/time#PlainDate\">PlainDate</a>::add_years(self : <a href=\"moonbitlang/x/time#PlainDate\">PlainDate</a>, years : Int64) -> <a href=\"moonbitlang/x/time#PlainDate\">PlainDate</a>!<a href=\"moonbitlang/core/error#Error\">Error</a>",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "plain_date.mbt",
            "line": 263,
            "column": 19
          }
        },
        {
          "name": "compare",
          "docstring": "",
          "signature": "fn <a href=\"moonbitlang/x/time#PlainDate\">PlainDate</a>::compare(self : <a href=\"moonbitlang/x/time#PlainDate\">PlainDate</a>, other : <a href=\"moonbitlang/x/time#PlainDate\">PlainDate</a>) -> Int",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "plain_date.mbt",
            "line": 113,
            "column": 8
          }
        },
        {
          "name": "day",
          "docstring": " Returns the day of the month.",
          "signature": "fn <a href=\"moonbitlang/x/time#PlainDate\">PlainDate</a>::day(self : <a href=\"moonbitlang/x/time#PlainDate\">PlainDate</a>) -> Int",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "plain_date.mbt",
            "line": 160,
            "column": 8
          }
        },
        {
          "name": "days_in_month",
          "docstring": " Returns the number of days in the month.",
          "signature": "fn <a href=\"moonbitlang/x/time#PlainDate\">PlainDate</a>::days_in_month(self : <a href=\"moonbitlang/x/time#PlainDate\">PlainDate</a>) -> Int",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "plain_date.mbt",
            "line": 195,
            "column": 8
          }
        },
        {
          "name": "days_in_week",
          "docstring": " Returns the number of days in the week.",
          "signature": "fn <a href=\"moonbitlang/x/time#PlainDate\">PlainDate</a>::days_in_week(_self : <a href=\"moonbitlang/x/time#PlainDate\">PlainDate</a>) -> Int",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "plain_date.mbt",
            "line": 190,
            "column": 19
          }
        },
        {
          "name": "days_in_year",
          "docstring": " Returns the number of days in the year.",
          "signature": "fn <a href=\"moonbitlang/x/time#PlainDate\">PlainDate</a>::days_in_year(self : <a href=\"moonbitlang/x/time#PlainDate\">PlainDate</a>) -> Int",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "plain_date.mbt",
            "line": 201,
            "column": 8
          }
        },
        {
          "name": "era",
          "docstring": " Returns the era of this date.",
          "signature": "fn <a href=\"moonbitlang/x/time#PlainDate\">PlainDate</a>::era(self : <a href=\"moonbitlang/x/time#PlainDate\">PlainDate</a>) -> String",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "plain_date.mbt",
            "line": 132,
            "column": 8
          }
        },
        {
          "name": "era_year",
          "docstring": " Returns the year of the era of this date.",
          "signature": "fn <a href=\"moonbitlang/x/time#PlainDate\">PlainDate</a>::era_year(self : <a href=\"moonbitlang/x/time#PlainDate\">PlainDate</a>) -> Int",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "plain_date.mbt",
            "line": 141,
            "column": 8
          }
        },
        {
          "name": "from_string",
          "docstring": " Creates a PlainDate from a string, like \"2008-08-08\".",
          "signature": "fn <a href=\"moonbitlang/x/time#PlainDate\">PlainDate</a>::from_string(str : String) -> <a href=\"moonbitlang/x/time#PlainDate\">PlainDate</a>!<a href=\"moonbitlang/core/error#Error\">Error</a>",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "plain_date.mbt",
            "line": 60,
            "column": 19
          }
        },
        {
          "name": "from_unix_day",
          "docstring": " Creates a date from the days count since unix epoch.",
          "signature": "fn <a href=\"moonbitlang/x/time#PlainDate\">PlainDate</a>::from_unix_day(unix_day : Int64) -> <a href=\"moonbitlang/x/time#PlainDate\">PlainDate</a>!<a href=\"moonbitlang/core/error#Error\">Error</a>",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "plain_date.mbt",
            "line": 46,
            "column": 19
          }
        },
        {
          "name": "from_year_ord",
          "docstring": " Creates a PlainDate from year and ordinal day.",
          "signature": "fn <a href=\"moonbitlang/x/time#PlainDate\">PlainDate</a>::from_year_ord(year : Int, ordinal : Int) -> <a href=\"moonbitlang/x/time#PlainDate\">PlainDate</a>!<a href=\"moonbitlang/core/error#Error\">Error</a>",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "plain_date.mbt",
            "line": 31,
            "column": 19
          }
        },
        {
          "name": "in_leap_year",
          "docstring": " Checks if the date is in a leap year.",
          "signature": "fn <a href=\"moonbitlang/x/time#PlainDate\">PlainDate</a>::in_leap_year(self : <a href=\"moonbitlang/x/time#PlainDate\">PlainDate</a>) -> Bool",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "plain_date.mbt",
            "line": 211,
            "column": 8
          }
        },
        {
          "name": "month",
          "docstring": " Returns the ordinal number of month in the current year.",
          "signature": "fn <a href=\"moonbitlang/x/time#PlainDate\">PlainDate</a>::month(self : <a href=\"moonbitlang/x/time#PlainDate\">PlainDate</a>) -> Int",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "plain_date.mbt",
            "line": 155,
            "column": 8
          }
        },
        {
          "name": "months_in_year",
          "docstring": " Returns the number of months in the year.",
          "signature": "fn <a href=\"moonbitlang/x/time#PlainDate\">PlainDate</a>::months_in_year(_self : <a href=\"moonbitlang/x/time#PlainDate\">PlainDate</a>) -> Int",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "plain_date.mbt",
            "line": 206,
            "column": 19
          }
        },
        {
          "name": "of",
          "docstring": " Creates a PlainDate from the year, month and day.",
          "signature": "fn <a href=\"moonbitlang/x/time#PlainDate\">PlainDate</a>::of(year : Int, month : Int, day : Int) -> <a href=\"moonbitlang/x/time#PlainDate\">PlainDate</a>!<a href=\"moonbitlang/core/error#Error\">Error</a>",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "plain_date.mbt",
            "line": 23,
            "column": 19
          }
        },
        {
          "name": "op_equal",
          "docstring": "",
          "signature": "fn <a href=\"moonbitlang/x/time#PlainDate\">PlainDate</a>::op_equal(self : <a href=\"moonbitlang/x/time#PlainDate\">PlainDate</a>, other : <a href=\"moonbitlang/x/time#PlainDate\">PlainDate</a>) -> Bool",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "plain_date.mbt",
            "line": 108,
            "column": 8
          }
        },
        {
          "name": "ordinal",
          "docstring": " Returns the ordinal day of the year.",
          "signature": "fn <a href=\"moonbitlang/x/time#PlainDate\">PlainDate</a>::ordinal(self : <a href=\"moonbitlang/x/time#PlainDate\">PlainDate</a>) -> Int",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "plain_date.mbt",
            "line": 183,
            "column": 8
          }
        },
        {
          "name": "to_string",
          "docstring": " Returns a string representing the date.",
          "signature": "fn <a href=\"moonbitlang/x/time#PlainDate\">PlainDate</a>::to_string(self : <a href=\"moonbitlang/x/time#PlainDate\">PlainDate</a>) -> String",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "plain_date.mbt",
            "line": 89,
            "column": 19
          }
        },
        {
          "name": "to_unix_day",
          "docstring": " Returns the days count since unix epoch of this date.",
          "signature": "fn <a href=\"moonbitlang/x/time#PlainDate\">PlainDate</a>::to_unix_day(self : <a href=\"moonbitlang/x/time#PlainDate\">PlainDate</a>) -> Int64",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "plain_date.mbt",
            "line": 54,
            "column": 8
          }
        },
        {
          "name": "until",
          "docstring": " Returns the period between this date and another date.",
          "signature": "fn <a href=\"moonbitlang/x/time#PlainDate\">PlainDate</a>::until(self : <a href=\"moonbitlang/x/time#PlainDate\">PlainDate</a>, end : <a href=\"moonbitlang/x/time#PlainDate\">PlainDate</a>) -> <a href=\"moonbitlang/x/time#Period\">Period</a>!<a href=\"moonbitlang/core/error#Error\">Error</a>",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "plain_date.mbt",
            "line": 332,
            "column": 19
          }
        },
        {
          "name": "weekday",
          "docstring": " Returns the weekday.",
          "signature": "fn <a href=\"moonbitlang/x/time#PlainDate\">PlainDate</a>::weekday(self : <a href=\"moonbitlang/x/time#PlainDate\">PlainDate</a>) -> <a href=\"moonbitlang/x/time#Weekday\">Weekday</a>",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "plain_date.mbt",
            "line": 165,
            "column": 8
          }
        },
        {
          "name": "with_day",
          "docstring": " Returns a new date with the specified day of month.",
          "signature": "fn <a href=\"moonbitlang/x/time#PlainDate\">PlainDate</a>::with_day(self : <a href=\"moonbitlang/x/time#PlainDate\">PlainDate</a>, day : Int) -> <a href=\"moonbitlang/x/time#PlainDate\">PlainDate</a>!<a href=\"moonbitlang/core/error#Error\">Error</a>",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "plain_date.mbt",
            "line": 242,
            "column": 8
          }
        },
        {
          "name": "with_month",
          "docstring": " Returns a new date with the specified month.",
          "signature": "fn <a href=\"moonbitlang/x/time#PlainDate\">PlainDate</a>::with_month(self : <a href=\"moonbitlang/x/time#PlainDate\">PlainDate</a>, month : Int) -> <a href=\"moonbitlang/x/time#PlainDate\">PlainDate</a>!<a href=\"moonbitlang/core/error#Error\">Error</a>",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "plain_date.mbt",
            "line": 229,
            "column": 8
          }
        },
        {
          "name": "with_ordinal",
          "docstring": " Returns a new date with the specified ordinal day of year.",
          "signature": "fn <a href=\"moonbitlang/x/time#PlainDate\">PlainDate</a>::with_ordinal(self : <a href=\"moonbitlang/x/time#PlainDate\">PlainDate</a>, ordinal : Int) -> <a href=\"moonbitlang/x/time#PlainDate\">PlainDate</a>!<a href=\"moonbitlang/core/error#Error\">Error</a>",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "plain_date.mbt",
            "line": 255,
            "column": 8
          }
        },
        {
          "name": "with_year",
          "docstring": " Returns a new date with the specified year.",
          "signature": "fn <a href=\"moonbitlang/x/time#PlainDate\">PlainDate</a>::with_year(self : <a href=\"moonbitlang/x/time#PlainDate\">PlainDate</a>, year : Int) -> <a href=\"moonbitlang/x/time#PlainDate\">PlainDate</a>!<a href=\"moonbitlang/core/error#Error\">Error</a>",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "plain_date.mbt",
            "line": 216,
            "column": 8
          }
        },
        {
          "name": "year",
          "docstring": " Returns the number of years relative to a calendar-specific epoch.",
          "signature": "fn <a href=\"moonbitlang/x/time#PlainDate\">PlainDate</a>::year(self : <a href=\"moonbitlang/x/time#PlainDate\">PlainDate</a>) -> Int",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "plain_date.mbt",
            "line": 150,
            "column": 8
          }
        }
      ],
      "impls": [
        {
          "self": {
            "kind": "constr",
            "constructor": {
              "name": "PlainDate",
              "path": "moonbitlang/x/time"
            },
            "arguments": []
          },
          "trait": { "name": "Show", "path": "moonbitlang/core/builtin" },
          "methods": [
            {
              "name": "output",
              "docstring": "",
              "signature": "fn output(self : <a href=\"moonbitlang/x/time#PlainDate\">PlainDate</a>, logger : <a href=\"moonbitlang/core/builtin#Logger\">Logger</a>) -> Unit",
              "loc": {
                "path": "moonbitlang/x/time",
                "file": "plain_date.mbt",
                "line": 103,
                "column": 34
              }
            }
          ]
        }
      ]
    },
    {
      "name": "PlainDateTime",
      "docstring": " A datetime without a time zone in the ISO 8601 calendar system.",
      "signature": "type PlainDateTime",
      "loc": {
        "path": "moonbitlang/x/time",
        "file": "plain_date_time.mbt",
        "line": 16,
        "column": 8
      },
      "methods": [
        {
          "name": "add_days",
          "docstring": " Adds specified days to this datetime, and returns a new datetime.",
          "signature": "fn <a href=\"moonbitlang/x/time#PlainDateTime\">PlainDateTime</a>::add_days(self : <a href=\"moonbitlang/x/time#PlainDateTime\">PlainDateTime</a>, days : Int64) -> <a href=\"moonbitlang/x/time#PlainDateTime\">PlainDateTime</a>!<a href=\"moonbitlang/core/error#Error\">Error</a>",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "plain_date_time.mbt",
            "line": 196,
            "column": 23
          }
        },
        {
          "name": "add_duration",
          "docstring": " Adds a duration of time to this datetime, and returns a new datetime.",
          "signature": "fn <a href=\"moonbitlang/x/time#PlainDateTime\">PlainDateTime</a>::add_duration(self : <a href=\"moonbitlang/x/time#PlainDateTime\">PlainDateTime</a>, duration : <a href=\"moonbitlang/x/time#Duration\">Duration</a>) -> <a href=\"moonbitlang/x/time#PlainDateTime\">PlainDateTime</a>!<a href=\"moonbitlang/core/error#Error\">Error</a>",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "plain_date_time.mbt",
            "line": 256,
            "column": 23
          }
        },
        {
          "name": "add_hours",
          "docstring": " Adds specified hours to this datetime, and returns a new datetime.",
          "signature": "fn <a href=\"moonbitlang/x/time#PlainDateTime\">PlainDateTime</a>::add_hours(self : <a href=\"moonbitlang/x/time#PlainDateTime\">PlainDateTime</a>, hours : Int64) -> <a href=\"moonbitlang/x/time#PlainDateTime\">PlainDateTime</a>!<a href=\"moonbitlang/core/error#Error\">Error</a>",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "plain_date_time.mbt",
            "line": 212,
            "column": 23
          }
        },
        {
          "name": "add_minutes",
          "docstring": " Adds specified minutes to this datetime, and returns a new datetime.",
          "signature": "fn <a href=\"moonbitlang/x/time#PlainDateTime\">PlainDateTime</a>::add_minutes(self : <a href=\"moonbitlang/x/time#PlainDateTime\">PlainDateTime</a>, minutes : Int64) -> <a href=\"moonbitlang/x/time#PlainDateTime\">PlainDateTime</a>!<a href=\"moonbitlang/core/error#Error\">Error</a>",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "plain_date_time.mbt",
            "line": 223,
            "column": 23
          }
        },
        {
          "name": "add_months",
          "docstring": " Adds specified months to this datetime, and returns a new datetime.",
          "signature": "fn <a href=\"moonbitlang/x/time#PlainDateTime\">PlainDateTime</a>::add_months(self : <a href=\"moonbitlang/x/time#PlainDateTime\">PlainDateTime</a>, months : Int64) -> <a href=\"moonbitlang/x/time#PlainDateTime\">PlainDateTime</a>!<a href=\"moonbitlang/core/error#Error\">Error</a>",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "plain_date_time.mbt",
            "line": 180,
            "column": 23
          }
        },
        {
          "name": "add_nanoseconds",
          "docstring": " Adds specified nanoseconds to this datetime, and returns a new datetime.",
          "signature": "fn <a href=\"moonbitlang/x/time#PlainDateTime\">PlainDateTime</a>::add_nanoseconds(self : <a href=\"moonbitlang/x/time#PlainDateTime\">PlainDateTime</a>, nanoseconds : Int64) -> <a href=\"moonbitlang/x/time#PlainDateTime\">PlainDateTime</a>!<a href=\"moonbitlang/core/error#Error\">Error</a>",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "plain_date_time.mbt",
            "line": 245,
            "column": 23
          }
        },
        {
          "name": "add_period",
          "docstring": " Adds a period of date to this datetime, and returns a new datetime.",
          "signature": "fn <a href=\"moonbitlang/x/time#PlainDateTime\">PlainDateTime</a>::add_period(self : <a href=\"moonbitlang/x/time#PlainDateTime\">PlainDateTime</a>, period : <a href=\"moonbitlang/x/time#Period\">Period</a>) -> <a href=\"moonbitlang/x/time#PlainDateTime\">PlainDateTime</a>!<a href=\"moonbitlang/core/error#Error\">Error</a>",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "plain_date_time.mbt",
            "line": 204,
            "column": 23
          }
        },
        {
          "name": "add_seconds",
          "docstring": " Adds specified seconds to this datetime, and returns a new datetime.",
          "signature": "fn <a href=\"moonbitlang/x/time#PlainDateTime\">PlainDateTime</a>::add_seconds(self : <a href=\"moonbitlang/x/time#PlainDateTime\">PlainDateTime</a>, seconds : Int64) -> <a href=\"moonbitlang/x/time#PlainDateTime\">PlainDateTime</a>!<a href=\"moonbitlang/core/error#Error\">Error</a>",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "plain_date_time.mbt",
            "line": 234,
            "column": 23
          }
        },
        {
          "name": "add_weeks",
          "docstring": " Adds specified weeks to this datetime, and returns a new datetime.",
          "signature": "fn <a href=\"moonbitlang/x/time#PlainDateTime\">PlainDateTime</a>::add_weeks(self : <a href=\"moonbitlang/x/time#PlainDateTime\">PlainDateTime</a>, weeks : Int64) -> <a href=\"moonbitlang/x/time#PlainDateTime\">PlainDateTime</a>!<a href=\"moonbitlang/core/error#Error\">Error</a>",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "plain_date_time.mbt",
            "line": 188,
            "column": 23
          }
        },
        {
          "name": "add_years",
          "docstring": " Adds specified years to this datetime, and returns a new datetime.",
          "signature": "fn <a href=\"moonbitlang/x/time#PlainDateTime\">PlainDateTime</a>::add_years(self : <a href=\"moonbitlang/x/time#PlainDateTime\">PlainDateTime</a>, years : Int64) -> <a href=\"moonbitlang/x/time#PlainDateTime\">PlainDateTime</a>!<a href=\"moonbitlang/core/error#Error\">Error</a>",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "plain_date_time.mbt",
            "line": 172,
            "column": 23
          }
        },
        {
          "name": "day",
          "docstring": " Returns the day of month of this datetime.",
          "signature": "fn <a href=\"moonbitlang/x/time#PlainDateTime\">PlainDateTime</a>::day(self : <a href=\"moonbitlang/x/time#PlainDateTime\">PlainDateTime</a>) -> Int",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "plain_date_time.mbt",
            "line": 112,
            "column": 23
          }
        },
        {
          "name": "days_in_month",
          "docstring": " Returns the number of days in a month of this datetime.",
          "signature": "fn <a href=\"moonbitlang/x/time#PlainDateTime\">PlainDateTime</a>::days_in_month(self : <a href=\"moonbitlang/x/time#PlainDateTime\">PlainDateTime</a>) -> Int",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "plain_date_time.mbt",
            "line": 132,
            "column": 23
          }
        },
        {
          "name": "days_in_week",
          "docstring": " Returns the number of days in a week of this datetime.",
          "signature": "fn <a href=\"moonbitlang/x/time#PlainDateTime\">PlainDateTime</a>::days_in_week(self : <a href=\"moonbitlang/x/time#PlainDateTime\">PlainDateTime</a>) -> Int",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "plain_date_time.mbt",
            "line": 127,
            "column": 23
          }
        },
        {
          "name": "days_in_year",
          "docstring": " Returns the number of days in a year of this datetime.",
          "signature": "fn <a href=\"moonbitlang/x/time#PlainDateTime\">PlainDateTime</a>::days_in_year(self : <a href=\"moonbitlang/x/time#PlainDateTime\">PlainDateTime</a>) -> Int",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "plain_date_time.mbt",
            "line": 137,
            "column": 23
          }
        },
        {
          "name": "era",
          "docstring": " Returns the era of this datetime.",
          "signature": "fn <a href=\"moonbitlang/x/time#PlainDateTime\">PlainDateTime</a>::era(self : <a href=\"moonbitlang/x/time#PlainDateTime\">PlainDateTime</a>) -> String",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "plain_date_time.mbt",
            "line": 92,
            "column": 23
          }
        },
        {
          "name": "era_year",
          "docstring": " Returns the year of era of this datetime.",
          "signature": "fn <a href=\"moonbitlang/x/time#PlainDateTime\">PlainDateTime</a>::era_year(self : <a href=\"moonbitlang/x/time#PlainDateTime\">PlainDateTime</a>) -> Int",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "plain_date_time.mbt",
            "line": 97,
            "column": 23
          }
        },
        {
          "name": "from_string",
          "docstring": " Creates a PlainTime from a string, like '2008-08-08T20:00:00'.",
          "signature": "fn <a href=\"moonbitlang/x/time#PlainDateTime\">PlainDateTime</a>::from_string(str : String) -> <a href=\"moonbitlang/x/time#PlainDateTime\">PlainDateTime</a>!<a href=\"moonbitlang/core/error#Error\">Error</a>",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "plain_date_time.mbt",
            "line": 63,
            "column": 23
          }
        },
        {
          "name": "from_unix_second",
          "docstring": " Creates a PlainDateTime from the elapsed seconds since the unix epoch.",
          "signature": "fn <a href=\"moonbitlang/x/time#PlainDateTime\">PlainDateTime</a>::from_unix_second(second : Int64, nanosecond : Int, offset : <a href=\"moonbitlang/x/time#ZoneOffset\">ZoneOffset</a>) -> <a href=\"moonbitlang/x/time#PlainDateTime\">PlainDateTime</a>!<a href=\"moonbitlang/core/error#Error\">Error</a>",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "plain_date_time.mbt",
            "line": 38,
            "column": 23
          }
        },
        {
          "name": "hour",
          "docstring": " Returns the hour of this datetime.",
          "signature": "fn <a href=\"moonbitlang/x/time#PlainDateTime\">PlainDateTime</a>::hour(self : <a href=\"moonbitlang/x/time#PlainDateTime\">PlainDateTime</a>) -> Int",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "plain_date_time.mbt",
            "line": 152,
            "column": 23
          }
        },
        {
          "name": "in_leap_year",
          "docstring": " Checks if this datetime is in a leap year.",
          "signature": "fn <a href=\"moonbitlang/x/time#PlainDateTime\">PlainDateTime</a>::in_leap_year(self : <a href=\"moonbitlang/x/time#PlainDateTime\">PlainDateTime</a>) -> Bool",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "plain_date_time.mbt",
            "line": 147,
            "column": 23
          }
        },
        {
          "name": "minute",
          "docstring": " Returns the minute of this datetime.",
          "signature": "fn <a href=\"moonbitlang/x/time#PlainDateTime\">PlainDateTime</a>::minute(self : <a href=\"moonbitlang/x/time#PlainDateTime\">PlainDateTime</a>) -> Int",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "plain_date_time.mbt",
            "line": 157,
            "column": 23
          }
        },
        {
          "name": "month",
          "docstring": " Returns the month of this datetime.",
          "signature": "fn <a href=\"moonbitlang/x/time#PlainDateTime\">PlainDateTime</a>::month(self : <a href=\"moonbitlang/x/time#PlainDateTime\">PlainDateTime</a>) -> Int",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "plain_date_time.mbt",
            "line": 107,
            "column": 23
          }
        },
        {
          "name": "months_in_year",
          "docstring": " Returns the number of months in a year of this datetime.",
          "signature": "fn <a href=\"moonbitlang/x/time#PlainDateTime\">PlainDateTime</a>::months_in_year(self : <a href=\"moonbitlang/x/time#PlainDateTime\">PlainDateTime</a>) -> Int",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "plain_date_time.mbt",
            "line": 142,
            "column": 23
          }
        },
        {
          "name": "nanosecond",
          "docstring": " Returns the nanosecond of this datetime.",
          "signature": "fn <a href=\"moonbitlang/x/time#PlainDateTime\">PlainDateTime</a>::nanosecond(self : <a href=\"moonbitlang/x/time#PlainDateTime\">PlainDateTime</a>) -> Int",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "plain_date_time.mbt",
            "line": 167,
            "column": 23
          }
        },
        {
          "name": "of",
          "docstring": " Creates a PlainDateTime from the year, month, day, hour, minute, second and nanosecond.",
          "signature": "fn <a href=\"moonbitlang/x/time#PlainDateTime\">PlainDateTime</a>::of(year : Int, month : Int, day : Int, hour~ : Int = .., minute~ : Int = .., second~ : Int = .., nanosecond~ : Int = ..) -> <a href=\"moonbitlang/x/time#PlainDateTime\">PlainDateTime</a>!<a href=\"moonbitlang/core/error#Error\">Error</a>",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "plain_date_time.mbt",
            "line": 22,
            "column": 23
          }
        },
        {
          "name": "ordinal",
          "docstring": " Returns the ordinal day of year of this datetime.",
          "signature": "fn <a href=\"moonbitlang/x/time#PlainDateTime\">PlainDateTime</a>::ordinal(self : <a href=\"moonbitlang/x/time#PlainDateTime\">PlainDateTime</a>) -> Int",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "plain_date_time.mbt",
            "line": 122,
            "column": 23
          }
        },
        {
          "name": "second",
          "docstring": " Returns the second of this datetime.",
          "signature": "fn <a href=\"moonbitlang/x/time#PlainDateTime\">PlainDateTime</a>::second(self : <a href=\"moonbitlang/x/time#PlainDateTime\">PlainDateTime</a>) -> Int",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "plain_date_time.mbt",
            "line": 162,
            "column": 23
          }
        },
        {
          "name": "to_plain_date",
          "docstring": " Returns the date part of this datetime.",
          "signature": "fn <a href=\"moonbitlang/x/time#PlainDateTime\">PlainDateTime</a>::to_plain_date(self : <a href=\"moonbitlang/x/time#PlainDateTime\">PlainDateTime</a>) -> <a href=\"moonbitlang/x/time#PlainDate\">PlainDate</a>",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "plain_date_time.mbt",
            "line": 331,
            "column": 23
          }
        },
        {
          "name": "to_plain_time",
          "docstring": " Returns the time part of this datetime.",
          "signature": "fn <a href=\"moonbitlang/x/time#PlainDateTime\">PlainDateTime</a>::to_plain_time(self : <a href=\"moonbitlang/x/time#PlainDateTime\">PlainDateTime</a>) -> <a href=\"moonbitlang/x/time#PlainTime\">PlainTime</a>",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "plain_date_time.mbt",
            "line": 336,
            "column": 23
          }
        },
        {
          "name": "to_string",
          "docstring": " Returns a string representing the datetime.",
          "signature": "fn <a href=\"moonbitlang/x/time#PlainDateTime\">PlainDateTime</a>::to_string(self : <a href=\"moonbitlang/x/time#PlainDateTime\">PlainDateTime</a>) -> String",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "plain_date_time.mbt",
            "line": 75,
            "column": 23
          }
        },
        {
          "name": "to_unix_second",
          "docstring": " Converts this datetime to the elapsed seconds since the unix epoch.",
          "signature": "fn <a href=\"moonbitlang/x/time#PlainDateTime\">PlainDateTime</a>::to_unix_second(self : <a href=\"moonbitlang/x/time#PlainDateTime\">PlainDateTime</a>) -> Int64",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "plain_date_time.mbt",
            "line": 57,
            "column": 8
          }
        },
        {
          "name": "weekday",
          "docstring": " Returns the weekday of this datetime.",
          "signature": "fn <a href=\"moonbitlang/x/time#PlainDateTime\">PlainDateTime</a>::weekday(self : <a href=\"moonbitlang/x/time#PlainDateTime\">PlainDateTime</a>) -> <a href=\"moonbitlang/x/time#Weekday\">Weekday</a>",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "plain_date_time.mbt",
            "line": 117,
            "column": 23
          }
        },
        {
          "name": "with_day",
          "docstring": " Returns a new datetime with the specified day of month.",
          "signature": "fn <a href=\"moonbitlang/x/time#PlainDateTime\">PlainDateTime</a>::with_day(self : <a href=\"moonbitlang/x/time#PlainDateTime\">PlainDateTime</a>, day : Int) -> <a href=\"moonbitlang/x/time#PlainDateTime\">PlainDateTime</a>!<a href=\"moonbitlang/core/error#Error\">Error</a>",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "plain_date_time.mbt",
            "line": 283,
            "column": 23
          }
        },
        {
          "name": "with_hour",
          "docstring": " Returns a new datetime with the specified hour.",
          "signature": "fn <a href=\"moonbitlang/x/time#PlainDateTime\">PlainDateTime</a>::with_hour(self : <a href=\"moonbitlang/x/time#PlainDateTime\">PlainDateTime</a>, hour : Int) -> <a href=\"moonbitlang/x/time#PlainDateTime\">PlainDateTime</a>!<a href=\"moonbitlang/core/error#Error\">Error</a>",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "plain_date_time.mbt",
            "line": 299,
            "column": 23
          }
        },
        {
          "name": "with_minute",
          "docstring": " Returns a new datetime with the specified minute.",
          "signature": "fn <a href=\"moonbitlang/x/time#PlainDateTime\">PlainDateTime</a>::with_minute(self : <a href=\"moonbitlang/x/time#PlainDateTime\">PlainDateTime</a>, minute : Int) -> <a href=\"moonbitlang/x/time#PlainDateTime\">PlainDateTime</a>!<a href=\"moonbitlang/core/error#Error\">Error</a>",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "plain_date_time.mbt",
            "line": 307,
            "column": 23
          }
        },
        {
          "name": "with_month",
          "docstring": " Returns a new datetime with the specified month.",
          "signature": "fn <a href=\"moonbitlang/x/time#PlainDateTime\">PlainDateTime</a>::with_month(self : <a href=\"moonbitlang/x/time#PlainDateTime\">PlainDateTime</a>, month : Int) -> <a href=\"moonbitlang/x/time#PlainDateTime\">PlainDateTime</a>!<a href=\"moonbitlang/core/error#Error\">Error</a>",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "plain_date_time.mbt",
            "line": 275,
            "column": 23
          }
        },
        {
          "name": "with_nanosecond",
          "docstring": " Returns a new datetime with the specified nanosecond.",
          "signature": "fn <a href=\"moonbitlang/x/time#PlainDateTime\">PlainDateTime</a>::with_nanosecond(self : <a href=\"moonbitlang/x/time#PlainDateTime\">PlainDateTime</a>, nanosecond : Int) -> <a href=\"moonbitlang/x/time#PlainDateTime\">PlainDateTime</a>!<a href=\"moonbitlang/core/error#Error\">Error</a>",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "plain_date_time.mbt",
            "line": 323,
            "column": 23
          }
        },
        {
          "name": "with_ordinal",
          "docstring": " Returns a new datetime with the specified ordinal day of year.",
          "signature": "fn <a href=\"moonbitlang/x/time#PlainDateTime\">PlainDateTime</a>::with_ordinal(self : <a href=\"moonbitlang/x/time#PlainDateTime\">PlainDateTime</a>, ordinal : Int) -> <a href=\"moonbitlang/x/time#PlainDateTime\">PlainDateTime</a>!<a href=\"moonbitlang/core/error#Error\">Error</a>",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "plain_date_time.mbt",
            "line": 291,
            "column": 23
          }
        },
        {
          "name": "with_second",
          "docstring": " Returns a new datetime with the specified second.",
          "signature": "fn <a href=\"moonbitlang/x/time#PlainDateTime\">PlainDateTime</a>::with_second(self : <a href=\"moonbitlang/x/time#PlainDateTime\">PlainDateTime</a>, second : Int) -> <a href=\"moonbitlang/x/time#PlainDateTime\">PlainDateTime</a>!<a href=\"moonbitlang/core/error#Error\">Error</a>",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "plain_date_time.mbt",
            "line": 315,
            "column": 23
          }
        },
        {
          "name": "with_year",
          "docstring": " Returns a new datetime with the specified year.",
          "signature": "fn <a href=\"moonbitlang/x/time#PlainDateTime\">PlainDateTime</a>::with_year(self : <a href=\"moonbitlang/x/time#PlainDateTime\">PlainDateTime</a>, year : Int) -> <a href=\"moonbitlang/x/time#PlainDateTime\">PlainDateTime</a>!<a href=\"moonbitlang/core/error#Error\">Error</a>",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "plain_date_time.mbt",
            "line": 267,
            "column": 23
          }
        },
        {
          "name": "year",
          "docstring": " Returns the year of this datetime.",
          "signature": "fn <a href=\"moonbitlang/x/time#PlainDateTime\">PlainDateTime</a>::year(self : <a href=\"moonbitlang/x/time#PlainDateTime\">PlainDateTime</a>) -> Int",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "plain_date_time.mbt",
            "line": 102,
            "column": 23
          }
        }
      ],
      "impls": [
        {
          "self": {
            "kind": "constr",
            "constructor": {
              "name": "PlainDateTime",
              "path": "moonbitlang/x/time"
            },
            "arguments": []
          },
          "trait": { "name": "Compare", "path": "moonbitlang/core/builtin" },
          "methods": [
            {
              "name": "compare",
              "docstring": "automatically derived",
              "signature": "fn compare(<a href=\"moonbitlang/x/time#PlainDateTime\">PlainDateTime</a>, <a href=\"moonbitlang/x/time#PlainDateTime\">PlainDateTime</a>) -> Int",
              "loc": {
                "path": "moonbitlang/x/time",
                "file": "plain_date_time.mbt",
                "line": 19,
                "column": 14
              }
            }
          ]
        },
        {
          "self": {
            "kind": "constr",
            "constructor": {
              "name": "PlainDateTime",
              "path": "moonbitlang/x/time"
            },
            "arguments": []
          },
          "trait": { "name": "Eq", "path": "moonbitlang/core/builtin" },
          "methods": [
            {
              "name": "op_equal",
              "docstring": "automatically derived",
              "signature": "fn op_equal(<a href=\"moonbitlang/x/time#PlainDateTime\">PlainDateTime</a>, <a href=\"moonbitlang/x/time#PlainDateTime\">PlainDateTime</a>) -> Bool",
              "loc": {
                "path": "moonbitlang/x/time",
                "file": "plain_date_time.mbt",
                "line": 19,
                "column": 10
              }
            }
          ]
        },
        {
          "self": {
            "kind": "constr",
            "constructor": {
              "name": "PlainDateTime",
              "path": "moonbitlang/x/time"
            },
            "arguments": []
          },
          "trait": { "name": "Show", "path": "moonbitlang/core/builtin" },
          "methods": [
            {
              "name": "output",
              "docstring": "",
              "signature": "fn output(self : <a href=\"moonbitlang/x/time#PlainDateTime\">PlainDateTime</a>, logger : <a href=\"moonbitlang/core/builtin#Logger\">Logger</a>) -> Unit",
              "loc": {
                "path": "moonbitlang/x/time",
                "file": "plain_date_time.mbt",
                "line": 84,
                "column": 38
              }
            }
          ]
        }
      ]
    },
    {
      "name": "PlainTime",
      "docstring": " A time without a time zone",
      "signature": "type PlainTime",
      "loc": {
        "path": "moonbitlang/x/time",
        "file": "plain_time.mbt",
        "line": 16,
        "column": 8
      },
      "methods": [
        {
          "name": "add_duration",
          "docstring": " Adds a duration to this time, and returns a new time.",
          "signature": "fn <a href=\"moonbitlang/x/time#PlainTime\">PlainTime</a>::add_duration(self : <a href=\"moonbitlang/x/time#PlainTime\">PlainTime</a>, duration : <a href=\"moonbitlang/x/time#Duration\">Duration</a>) -> <a href=\"moonbitlang/x/time#PlainTime\">PlainTime</a>!<a href=\"moonbitlang/core/error#Error\">Error</a>",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "plain_time.mbt",
            "line": 232,
            "column": 19
          }
        },
        {
          "name": "add_hours",
          "docstring": " Adds specified hours to this time, and returns a new time.",
          "signature": "fn <a href=\"moonbitlang/x/time#PlainTime\">PlainTime</a>::add_hours(self : <a href=\"moonbitlang/x/time#PlainTime\">PlainTime</a>, hours : Int64) -> <a href=\"moonbitlang/x/time#PlainTime\">PlainTime</a>!<a href=\"moonbitlang/core/error#Error\">Error</a>",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "plain_time.mbt",
            "line": 153,
            "column": 19
          }
        },
        {
          "name": "add_minutes",
          "docstring": " Adds specified minutes to this time, and returns a new time.",
          "signature": "fn <a href=\"moonbitlang/x/time#PlainTime\">PlainTime</a>::add_minutes(self : <a href=\"moonbitlang/x/time#PlainTime\">PlainTime</a>, minutes : Int64) -> <a href=\"moonbitlang/x/time#PlainTime\">PlainTime</a>!<a href=\"moonbitlang/core/error#Error\">Error</a>",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "plain_time.mbt",
            "line": 162,
            "column": 19
          }
        },
        {
          "name": "add_nanoseconds",
          "docstring": " Adds specified nanoseconds to this time, and returns a new time.",
          "signature": "fn <a href=\"moonbitlang/x/time#PlainTime\">PlainTime</a>::add_nanoseconds(self : <a href=\"moonbitlang/x/time#PlainTime\">PlainTime</a>, nanoseconds : Int64) -> <a href=\"moonbitlang/x/time#PlainTime\">PlainTime</a>!<a href=\"moonbitlang/core/error#Error\">Error</a>",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "plain_time.mbt",
            "line": 213,
            "column": 19
          }
        },
        {
          "name": "add_seconds",
          "docstring": " Adds specified seconds to this time, and returns a new time.",
          "signature": "fn <a href=\"moonbitlang/x/time#PlainTime\">PlainTime</a>::add_seconds(self : <a href=\"moonbitlang/x/time#PlainTime\">PlainTime</a>, seconds : Int64) -> <a href=\"moonbitlang/x/time#PlainTime\">PlainTime</a>!<a href=\"moonbitlang/core/error#Error\">Error</a>",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "plain_time.mbt",
            "line": 186,
            "column": 19
          }
        },
        {
          "name": "at_date",
          "docstring": " Combines this time with a date to creates a PlainDateTime",
          "signature": "fn <a href=\"moonbitlang/x/time#PlainTime\">PlainTime</a>::at_date(self : <a href=\"moonbitlang/x/time#PlainTime\">PlainTime</a>, date : <a href=\"moonbitlang/x/time#PlainDate\">PlainDate</a>) -> <a href=\"moonbitlang/x/time#PlainDateTime\">PlainDateTime</a>",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "plain_time.mbt",
            "line": 290,
            "column": 8
          }
        },
        {
          "name": "from_nanosecond_of_day",
          "docstring": " Creates a PlainTime from the total nanoseconds of the day.",
          "signature": "fn <a href=\"moonbitlang/x/time#PlainTime\">PlainTime</a>::from_nanosecond_of_day(nanosecond : Int64) -> <a href=\"moonbitlang/x/time#PlainTime\">PlainTime</a>!<a href=\"moonbitlang/core/error#Error\">Error</a>",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "plain_time.mbt",
            "line": 133,
            "column": 19
          }
        },
        {
          "name": "from_second_of_day",
          "docstring": " Creates a PlainTime from the total seconds of the day.",
          "signature": "fn <a href=\"moonbitlang/x/time#PlainTime\">PlainTime</a>::from_second_of_day(second : Int) -> <a href=\"moonbitlang/x/time#PlainTime\">PlainTime</a>!<a href=\"moonbitlang/core/error#Error\">Error</a>",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "plain_time.mbt",
            "line": 120,
            "column": 19
          }
        },
        {
          "name": "from_string",
          "docstring": " Creates a PlainTime from a string, like '10:20:30.45678'.",
          "signature": "fn <a href=\"moonbitlang/x/time#PlainTime\">PlainTime</a>::from_string(str : String) -> <a href=\"moonbitlang/x/time#PlainTime\">PlainTime</a>!<a href=\"moonbitlang/core/error#Error\">Error</a>",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "plain_time.mbt",
            "line": 38,
            "column": 19
          }
        },
        {
          "name": "hour",
          "docstring": " Returns the hour of this time.",
          "signature": "fn <a href=\"moonbitlang/x/time#PlainTime\">PlainTime</a>::hour(self : <a href=\"moonbitlang/x/time#PlainTime\">PlainTime</a>) -> Int",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "plain_time.mbt",
            "line": 86,
            "column": 19
          }
        },
        {
          "name": "minute",
          "docstring": " Returns the minute of this time.",
          "signature": "fn <a href=\"moonbitlang/x/time#PlainTime\">PlainTime</a>::minute(self : <a href=\"moonbitlang/x/time#PlainTime\">PlainTime</a>) -> Int",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "plain_time.mbt",
            "line": 91,
            "column": 19
          }
        },
        {
          "name": "nanosecond",
          "docstring": " Returns the nanosecond of this time.",
          "signature": "fn <a href=\"moonbitlang/x/time#PlainTime\">PlainTime</a>::nanosecond(self : <a href=\"moonbitlang/x/time#PlainTime\">PlainTime</a>) -> Int",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "plain_time.mbt",
            "line": 101,
            "column": 19
          }
        },
        {
          "name": "nanosecond_of_day",
          "docstring": " Returns the total nanoseconds of this time.",
          "signature": "fn <a href=\"moonbitlang/x/time#PlainTime\">PlainTime</a>::nanosecond_of_day(self : <a href=\"moonbitlang/x/time#PlainTime\">PlainTime</a>) -> Int64",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "plain_time.mbt",
            "line": 114,
            "column": 8
          }
        },
        {
          "name": "of",
          "docstring": " Creates a PlainTime from the hour, minute, second and nanosecond.",
          "signature": "fn <a href=\"moonbitlang/x/time#PlainTime\">PlainTime</a>::of(hour : Int, minute : Int, second : Int, nanosecond : Int) -> <a href=\"moonbitlang/x/time#PlainTime\">PlainTime</a>!<a href=\"moonbitlang/core/error#Error\">Error</a>",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "plain_time.mbt",
            "line": 24,
            "column": 19
          }
        },
        {
          "name": "second",
          "docstring": " Returns the second of this time.",
          "signature": "fn <a href=\"moonbitlang/x/time#PlainTime\">PlainTime</a>::second(self : <a href=\"moonbitlang/x/time#PlainTime\">PlainTime</a>) -> Int",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "plain_time.mbt",
            "line": 96,
            "column": 19
          }
        },
        {
          "name": "second_of_day",
          "docstring": " Returns the total seconds of this time.",
          "signature": "fn <a href=\"moonbitlang/x/time#PlainTime\">PlainTime</a>::second_of_day(self : <a href=\"moonbitlang/x/time#PlainTime\">PlainTime</a>) -> Int",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "plain_time.mbt",
            "line": 106,
            "column": 8
          }
        },
        {
          "name": "to_string",
          "docstring": " Returns a string representing the time.",
          "signature": "fn <a href=\"moonbitlang/x/time#PlainTime\">PlainTime</a>::to_string(self : <a href=\"moonbitlang/x/time#PlainTime\">PlainTime</a>) -> String",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "plain_time.mbt",
            "line": 63,
            "column": 19
          }
        },
        {
          "name": "until",
          "docstring": " Returns the duration between this time and another time.",
          "signature": "fn <a href=\"moonbitlang/x/time#PlainTime\">PlainTime</a>::until(self : <a href=\"moonbitlang/x/time#PlainTime\">PlainTime</a>, end : <a href=\"moonbitlang/x/time#PlainTime\">PlainTime</a>) -> <a href=\"moonbitlang/x/time#Duration\">Duration</a>!<a href=\"moonbitlang/core/error#Error\">Error</a>",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "plain_time.mbt",
            "line": 284,
            "column": 19
          }
        },
        {
          "name": "with_hour",
          "docstring": " Returns a new time with the specified hour.",
          "signature": "fn <a href=\"moonbitlang/x/time#PlainTime\">PlainTime</a>::with_hour(self : <a href=\"moonbitlang/x/time#PlainTime\">PlainTime</a>, hour : Int) -> <a href=\"moonbitlang/x/time#PlainTime\">PlainTime</a>!<a href=\"moonbitlang/core/error#Error\">Error</a>",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "plain_time.mbt",
            "line": 243,
            "column": 19
          }
        },
        {
          "name": "with_minute",
          "docstring": " Returns a new time with the specified minute.",
          "signature": "fn <a href=\"moonbitlang/x/time#PlainTime\">PlainTime</a>::with_minute(self : <a href=\"moonbitlang/x/time#PlainTime\">PlainTime</a>, minute : Int) -> <a href=\"moonbitlang/x/time#PlainTime\">PlainTime</a>!<a href=\"moonbitlang/core/error#Error\">Error</a>",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "plain_time.mbt",
            "line": 251,
            "column": 19
          }
        },
        {
          "name": "with_nanosecond",
          "docstring": " Returns a new time with the specified nanosecond.",
          "signature": "fn <a href=\"moonbitlang/x/time#PlainTime\">PlainTime</a>::with_nanosecond(self : <a href=\"moonbitlang/x/time#PlainTime\">PlainTime</a>, nanosecond : Int) -> <a href=\"moonbitlang/x/time#PlainTime\">PlainTime</a>!<a href=\"moonbitlang/core/error#Error\">Error</a>",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "plain_time.mbt",
            "line": 273,
            "column": 19
          }
        },
        {
          "name": "with_second",
          "docstring": " Returns a new time with the specified second.",
          "signature": "fn <a href=\"moonbitlang/x/time#PlainTime\">PlainTime</a>::with_second(self : <a href=\"moonbitlang/x/time#PlainTime\">PlainTime</a>, second : Int) -> <a href=\"moonbitlang/x/time#PlainTime\">PlainTime</a>!<a href=\"moonbitlang/core/error#Error\">Error</a>",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "plain_time.mbt",
            "line": 262,
            "column": 19
          }
        }
      ],
      "impls": [
        {
          "self": {
            "kind": "constr",
            "constructor": {
              "name": "PlainTime",
              "path": "moonbitlang/x/time"
            },
            "arguments": []
          },
          "trait": { "name": "Compare", "path": "moonbitlang/core/builtin" },
          "methods": [
            {
              "name": "compare",
              "docstring": "automatically derived",
              "signature": "fn compare(<a href=\"moonbitlang/x/time#PlainTime\">PlainTime</a>, <a href=\"moonbitlang/x/time#PlainTime\">PlainTime</a>) -> Int",
              "loc": {
                "path": "moonbitlang/x/time",
                "file": "plain_time.mbt",
                "line": 21,
                "column": 14
              }
            }
          ]
        },
        {
          "self": {
            "kind": "constr",
            "constructor": {
              "name": "PlainTime",
              "path": "moonbitlang/x/time"
            },
            "arguments": []
          },
          "trait": { "name": "Eq", "path": "moonbitlang/core/builtin" },
          "methods": [
            {
              "name": "op_equal",
              "docstring": "automatically derived",
              "signature": "fn op_equal(<a href=\"moonbitlang/x/time#PlainTime\">PlainTime</a>, <a href=\"moonbitlang/x/time#PlainTime\">PlainTime</a>) -> Bool",
              "loc": {
                "path": "moonbitlang/x/time",
                "file": "plain_time.mbt",
                "line": 21,
                "column": 10
              }
            }
          ]
        },
        {
          "self": {
            "kind": "constr",
            "constructor": {
              "name": "PlainTime",
              "path": "moonbitlang/x/time"
            },
            "arguments": []
          },
          "trait": { "name": "Show", "path": "moonbitlang/core/builtin" },
          "methods": [
            {
              "name": "output",
              "docstring": "",
              "signature": "fn output(self : <a href=\"moonbitlang/x/time#PlainTime\">PlainTime</a>, logger : <a href=\"moonbitlang/core/builtin#Logger\">Logger</a>) -> Unit",
              "loc": {
                "path": "moonbitlang/x/time",
                "file": "plain_time.mbt",
                "line": 81,
                "column": 34
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Weekday",
      "docstring": "",
      "signature": "pub(all) enum Weekday {\n  Monday\n  Tuesday\n  Wednesday\n  Thursday\n  Friday\n  Saturday\n  Sunday\n}",
      "loc": {
        "path": "moonbitlang/x/time",
        "file": "weekday.mbt",
        "line": 16,
        "column": 15
      },
      "methods": [],
      "impls": [
        {
          "self": {
            "kind": "constr",
            "constructor": {
              "name": "Weekday",
              "path": "moonbitlang/x/time"
            },
            "arguments": []
          },
          "trait": { "name": "Eq", "path": "moonbitlang/core/builtin" },
          "methods": [
            {
              "name": "op_equal",
              "docstring": "automatically derived",
              "signature": "fn op_equal(<a href=\"moonbitlang/x/time#Weekday\">Weekday</a>, <a href=\"moonbitlang/x/time#Weekday\">Weekday</a>) -> Bool",
              "loc": {
                "path": "moonbitlang/x/time",
                "file": "weekday.mbt",
                "line": 24,
                "column": 10
              }
            }
          ]
        },
        {
          "self": {
            "kind": "constr",
            "constructor": {
              "name": "Weekday",
              "path": "moonbitlang/x/time"
            },
            "arguments": []
          },
          "trait": { "name": "Show", "path": "moonbitlang/core/builtin" },
          "methods": [
            {
              "name": "output",
              "docstring": "automatically derived",
              "signature": "fn output(<a href=\"moonbitlang/x/time#Weekday\">Weekday</a>, <a href=\"moonbitlang/core/builtin#Logger\">Logger</a>) -> Unit",
              "loc": {
                "path": "moonbitlang/x/time",
                "file": "weekday.mbt",
                "line": 24,
                "column": 14
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Zone",
      "docstring": " Time zone.",
      "signature": "type Zone",
      "loc": {
        "path": "moonbitlang/x/time",
        "file": "zone.mbt",
        "line": 16,
        "column": 8
      },
      "methods": [
        {
          "name": "from_tzif2",
          "docstring": " Creates a time zone from TZif2 data.",
          "signature": "fn <a href=\"moonbitlang/x/time#Zone\">Zone</a>::from_tzif2(id : String, data : <a href=\"moonbitlang/core/array#FixedArray\">FixedArray</a>[Byte]) -> <a href=\"moonbitlang/x/time#Zone\">Zone</a>!<a href=\"moonbitlang/core/error#Error\">Error</a>",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "zone.mbt",
            "line": 81,
            "column": 14
          }
        },
        {
          "name": "is_fixed",
          "docstring": " Checks if this zone only has one offset.",
          "signature": "fn <a href=\"moonbitlang/x/time#Zone\">Zone</a>::is_fixed(self : <a href=\"moonbitlang/x/time#Zone\">Zone</a>) -> Bool",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "zone.mbt",
            "line": 37,
            "column": 8
          }
        },
        {
          "name": "to_string",
          "docstring": " Returns the fixed zone id (e.g. \"UTC\", \"America/Los_Angeles\", etc.)",
          "signature": "fn <a href=\"moonbitlang/x/time#Zone\">Zone</a>::to_string(self : <a href=\"moonbitlang/x/time#Zone\">Zone</a>) -> String",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "zone.mbt",
            "line": 42,
            "column": 14
          }
        }
      ],
      "impls": [
        {
          "self": {
            "kind": "constr",
            "constructor": { "name": "Zone", "path": "moonbitlang/x/time" },
            "arguments": []
          },
          "trait": { "name": "Eq", "path": "moonbitlang/core/builtin" },
          "methods": [
            {
              "name": "op_equal",
              "docstring": "automatically derived",
              "signature": "fn op_equal(<a href=\"moonbitlang/x/time#Zone\">Zone</a>, <a href=\"moonbitlang/x/time#Zone\">Zone</a>) -> Bool",
              "loc": {
                "path": "moonbitlang/x/time",
                "file": "zone.mbt",
                "line": 20,
                "column": 10
              }
            }
          ]
        },
        {
          "self": {
            "kind": "constr",
            "constructor": { "name": "Zone", "path": "moonbitlang/x/time" },
            "arguments": []
          },
          "trait": { "name": "Show", "path": "moonbitlang/core/builtin" },
          "methods": [
            {
              "name": "output",
              "docstring": "",
              "signature": "fn output(self : <a href=\"moonbitlang/x/time#Zone\">Zone</a>, logger : <a href=\"moonbitlang/core/builtin#Logger\">Logger</a>) -> Unit",
              "loc": {
                "path": "moonbitlang/x/time",
                "file": "zone.mbt",
                "line": 47,
                "column": 29
              }
            }
          ]
        }
      ]
    },
    {
      "name": "ZoneOffset",
      "docstring": " Time offset from UTC.",
      "signature": "type ZoneOffset",
      "loc": {
        "path": "moonbitlang/x/time",
        "file": "zone_offset.mbt",
        "line": 16,
        "column": 8
      },
      "methods": [
        {
          "name": "abbreviation",
          "docstring": " Returns the zone offset abbreviation, e.g. \"PST\", \"CST\", \"EST\", \"UTC\", etc.",
          "signature": "fn <a href=\"moonbitlang/x/time#ZoneOffset\">ZoneOffset</a>::abbreviation(self : <a href=\"moonbitlang/x/time#ZoneOffset\">ZoneOffset</a>) -> String",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "zone_offset.mbt",
            "line": 79,
            "column": 20
          }
        },
        {
          "name": "compare",
          "docstring": "",
          "signature": "fn <a href=\"moonbitlang/x/time#ZoneOffset\">ZoneOffset</a>::compare(self : <a href=\"moonbitlang/x/time#ZoneOffset\">ZoneOffset</a>, other : <a href=\"moonbitlang/x/time#ZoneOffset\">ZoneOffset</a>) -> Int",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "zone_offset.mbt",
            "line": 94,
            "column": 20
          }
        },
        {
          "name": "from_seconds",
          "docstring": " Creates a offset from seconds.",
          "signature": "fn <a href=\"moonbitlang/x/time#ZoneOffset\">ZoneOffset</a>::from_seconds(seconds : Int, abbrev~ : String = .., dst~ : Bool = ..) -> <a href=\"moonbitlang/x/time#ZoneOffset\">ZoneOffset</a>!<a href=\"moonbitlang/core/error#Error\">Error</a>",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "zone_offset.mbt",
            "line": 59,
            "column": 20
          }
        },
        {
          "name": "id",
          "docstring": " Returns the offset id.",
          "signature": "fn <a href=\"moonbitlang/x/time#ZoneOffset\">ZoneOffset</a>::id(self : <a href=\"moonbitlang/x/time#ZoneOffset\">ZoneOffset</a>) -> String",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "zone_offset.mbt",
            "line": 99,
            "column": 8
          }
        },
        {
          "name": "is_dst",
          "docstring": " Checks if this offset is daylight saving time.",
          "signature": "fn <a href=\"moonbitlang/x/time#ZoneOffset\">ZoneOffset</a>::is_dst(self : <a href=\"moonbitlang/x/time#ZoneOffset\">ZoneOffset</a>) -> Bool",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "zone_offset.mbt",
            "line": 109,
            "column": 8
          }
        },
        {
          "name": "of",
          "docstring": " Creates a offset from hours, minutes and seconds.",
          "signature": "fn <a href=\"moonbitlang/x/time#ZoneOffset\">ZoneOffset</a>::of(hours~ : Int = .., minutes~ : Int = .., seconds~ : Int = .., abbrev~ : String = .., dst~ : Bool = ..) -> <a href=\"moonbitlang/x/time#ZoneOffset\">ZoneOffset</a>!<a href=\"moonbitlang/core/error#Error\">Error</a>",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "zone_offset.mbt",
            "line": 44,
            "column": 20
          }
        },
        {
          "name": "op_equal",
          "docstring": "",
          "signature": "fn <a href=\"moonbitlang/x/time#ZoneOffset\">ZoneOffset</a>::op_equal(self : <a href=\"moonbitlang/x/time#ZoneOffset\">ZoneOffset</a>, other : <a href=\"moonbitlang/x/time#ZoneOffset\">ZoneOffset</a>) -> Bool",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "zone_offset.mbt",
            "line": 89,
            "column": 20
          }
        },
        {
          "name": "seconds",
          "docstring": " Returns the total seconds of this offset.",
          "signature": "fn <a href=\"moonbitlang/x/time#ZoneOffset\">ZoneOffset</a>::seconds(self : <a href=\"moonbitlang/x/time#ZoneOffset\">ZoneOffset</a>) -> Int",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "zone_offset.mbt",
            "line": 104,
            "column": 20
          }
        },
        {
          "name": "to_string",
          "docstring": " Returns the offset id, e.g. \"Z\", \"+08:00\", \"-05:30\", etc.",
          "signature": "fn <a href=\"moonbitlang/x/time#ZoneOffset\">ZoneOffset</a>::to_string(self : <a href=\"moonbitlang/x/time#ZoneOffset\">ZoneOffset</a>) -> String",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "zone_offset.mbt",
            "line": 74,
            "column": 20
          }
        }
      ],
      "impls": [
        {
          "self": {
            "kind": "constr",
            "constructor": {
              "name": "ZoneOffset",
              "path": "moonbitlang/x/time"
            },
            "arguments": []
          },
          "trait": { "name": "Show", "path": "moonbitlang/core/builtin" },
          "methods": [
            {
              "name": "output",
              "docstring": "",
              "signature": "fn output(self : <a href=\"moonbitlang/x/time#ZoneOffset\">ZoneOffset</a>, logger : <a href=\"moonbitlang/core/builtin#Logger\">Logger</a>) -> Unit",
              "loc": {
                "path": "moonbitlang/x/time",
                "file": "zone_offset.mbt",
                "line": 84,
                "column": 35
              }
            }
          ]
        }
      ]
    },
    {
      "name": "ZonedDateTime",
      "docstring": " A datetime with a time zone and offset in the ISO 8601 calendar system.",
      "signature": "type ZonedDateTime",
      "loc": {
        "path": "moonbitlang/x/time",
        "file": "zoned_date_time.mbt",
        "line": 16,
        "column": 8
      },
      "methods": [
        {
          "name": "add_days",
          "docstring": " Adds specified days to this datetime, and returns a new datetime.",
          "signature": "fn <a href=\"moonbitlang/x/time#ZonedDateTime\">ZonedDateTime</a>::add_days(self : <a href=\"moonbitlang/x/time#ZonedDateTime\">ZonedDateTime</a>, days : Int64) -> <a href=\"moonbitlang/x/time#ZonedDateTime\">ZonedDateTime</a>!<a href=\"moonbitlang/core/error#Error\">Error</a>",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "zoned_date_time.mbt",
            "line": 262,
            "column": 23
          }
        },
        {
          "name": "add_hours",
          "docstring": " Adds specified hours to this datetime, and returns a new datetime.",
          "signature": "fn <a href=\"moonbitlang/x/time#ZonedDateTime\">ZonedDateTime</a>::add_hours(self : <a href=\"moonbitlang/x/time#ZonedDateTime\">ZonedDateTime</a>, hours : Int64) -> <a href=\"moonbitlang/x/time#ZonedDateTime\">ZonedDateTime</a>!<a href=\"moonbitlang/core/error#Error\">Error</a>",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "zoned_date_time.mbt",
            "line": 270,
            "column": 23
          }
        },
        {
          "name": "add_minutes",
          "docstring": " Adds specified minutes to this datetime, and returns a new datetime.",
          "signature": "fn <a href=\"moonbitlang/x/time#ZonedDateTime\">ZonedDateTime</a>::add_minutes(self : <a href=\"moonbitlang/x/time#ZonedDateTime\">ZonedDateTime</a>, minutes : Int64) -> <a href=\"moonbitlang/x/time#ZonedDateTime\">ZonedDateTime</a>!<a href=\"moonbitlang/core/error#Error\">Error</a>",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "zoned_date_time.mbt",
            "line": 278,
            "column": 23
          }
        },
        {
          "name": "add_months",
          "docstring": " Adds specified months to this datetime, and returns a new datetime.",
          "signature": "fn <a href=\"moonbitlang/x/time#ZonedDateTime\">ZonedDateTime</a>::add_months(self : <a href=\"moonbitlang/x/time#ZonedDateTime\">ZonedDateTime</a>, months : Int64) -> <a href=\"moonbitlang/x/time#ZonedDateTime\">ZonedDateTime</a>!<a href=\"moonbitlang/core/error#Error\">Error</a>",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "zoned_date_time.mbt",
            "line": 246,
            "column": 23
          }
        },
        {
          "name": "add_nanoseconds",
          "docstring": " Adds specified nanoseconds to this datetime, and returns a new datetime.",
          "signature": "fn <a href=\"moonbitlang/x/time#ZonedDateTime\">ZonedDateTime</a>::add_nanoseconds(self : <a href=\"moonbitlang/x/time#ZonedDateTime\">ZonedDateTime</a>, nanoseconds : Int64) -> <a href=\"moonbitlang/x/time#ZonedDateTime\">ZonedDateTime</a>!<a href=\"moonbitlang/core/error#Error\">Error</a>",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "zoned_date_time.mbt",
            "line": 294,
            "column": 23
          }
        },
        {
          "name": "add_seconds",
          "docstring": " Adds specified seconds to this datetime, and returns a new datetime.",
          "signature": "fn <a href=\"moonbitlang/x/time#ZonedDateTime\">ZonedDateTime</a>::add_seconds(self : <a href=\"moonbitlang/x/time#ZonedDateTime\">ZonedDateTime</a>, seconds : Int64) -> <a href=\"moonbitlang/x/time#ZonedDateTime\">ZonedDateTime</a>!<a href=\"moonbitlang/core/error#Error\">Error</a>",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "zoned_date_time.mbt",
            "line": 286,
            "column": 23
          }
        },
        {
          "name": "add_weeks",
          "docstring": " Adds specified weeks to this datetime, and returns a new datetime.",
          "signature": "fn <a href=\"moonbitlang/x/time#ZonedDateTime\">ZonedDateTime</a>::add_weeks(self : <a href=\"moonbitlang/x/time#ZonedDateTime\">ZonedDateTime</a>, weeks : Int64) -> <a href=\"moonbitlang/x/time#ZonedDateTime\">ZonedDateTime</a>!<a href=\"moonbitlang/core/error#Error\">Error</a>",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "zoned_date_time.mbt",
            "line": 254,
            "column": 23
          }
        },
        {
          "name": "add_years",
          "docstring": " Adds specified years to this datetime, and returns a new datetime.",
          "signature": "fn <a href=\"moonbitlang/x/time#ZonedDateTime\">ZonedDateTime</a>::add_years(self : <a href=\"moonbitlang/x/time#ZonedDateTime\">ZonedDateTime</a>, years : Int64) -> <a href=\"moonbitlang/x/time#ZonedDateTime\">ZonedDateTime</a>!<a href=\"moonbitlang/core/error#Error\">Error</a>",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "zoned_date_time.mbt",
            "line": 238,
            "column": 23
          }
        },
        {
          "name": "day",
          "docstring": " Returns the day of month of this datetime.",
          "signature": "fn <a href=\"moonbitlang/x/time#ZonedDateTime\">ZonedDateTime</a>::day(self : <a href=\"moonbitlang/x/time#ZonedDateTime\">ZonedDateTime</a>) -> Int",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "zoned_date_time.mbt",
            "line": 168,
            "column": 23
          }
        },
        {
          "name": "days_in_month",
          "docstring": " Returns the number of days in a month of this datetime.",
          "signature": "fn <a href=\"moonbitlang/x/time#ZonedDateTime\">ZonedDateTime</a>::days_in_month(self : <a href=\"moonbitlang/x/time#ZonedDateTime\">ZonedDateTime</a>) -> Int",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "zoned_date_time.mbt",
            "line": 188,
            "column": 23
          }
        },
        {
          "name": "days_in_week",
          "docstring": " Returns the number of days in a month of this datetime.",
          "signature": "fn <a href=\"moonbitlang/x/time#ZonedDateTime\">ZonedDateTime</a>::days_in_week(self : <a href=\"moonbitlang/x/time#ZonedDateTime\">ZonedDateTime</a>) -> Int",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "zoned_date_time.mbt",
            "line": 183,
            "column": 23
          }
        },
        {
          "name": "days_in_year",
          "docstring": " Returns the number of days in a year of this datetime.",
          "signature": "fn <a href=\"moonbitlang/x/time#ZonedDateTime\">ZonedDateTime</a>::days_in_year(self : <a href=\"moonbitlang/x/time#ZonedDateTime\">ZonedDateTime</a>) -> Int",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "zoned_date_time.mbt",
            "line": 193,
            "column": 23
          }
        },
        {
          "name": "era",
          "docstring": " Returns the era of this datetime.",
          "signature": "fn <a href=\"moonbitlang/x/time#ZonedDateTime\">ZonedDateTime</a>::era(self : <a href=\"moonbitlang/x/time#ZonedDateTime\">ZonedDateTime</a>) -> String",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "zoned_date_time.mbt",
            "line": 148,
            "column": 23
          }
        },
        {
          "name": "era_year",
          "docstring": " Returns the year of era of this datetime.",
          "signature": "fn <a href=\"moonbitlang/x/time#ZonedDateTime\">ZonedDateTime</a>::era_year(self : <a href=\"moonbitlang/x/time#ZonedDateTime\">ZonedDateTime</a>) -> Int",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "zoned_date_time.mbt",
            "line": 153,
            "column": 23
          }
        },
        {
          "name": "from_plain_datetime",
          "docstring": " Creates a ZonedDateTime from a PlainDateTime and a time zone.\n The default time zone is UTC+0.",
          "signature": "fn <a href=\"moonbitlang/x/time#ZonedDateTime\">ZonedDateTime</a>::from_plain_datetime(datetime : <a href=\"moonbitlang/x/time#PlainDateTime\">PlainDateTime</a>, zone~ : <a href=\"moonbitlang/x/time#Zone\">Zone</a> = ..) -> <a href=\"moonbitlang/x/time#ZonedDateTime\">ZonedDateTime</a>",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "zoned_date_time.mbt",
            "line": 82,
            "column": 23
          }
        },
        {
          "name": "from_unix_second",
          "docstring": " Creates a ZonedDateTime from elapsed seconds since the unix epoch and a time zone.\n The default time zone is UTC+0.",
          "signature": "fn <a href=\"moonbitlang/x/time#ZonedDateTime\">ZonedDateTime</a>::from_unix_second(second : Int64, nanosecond~ : Int = .., zone~ : <a href=\"moonbitlang/x/time#Zone\">Zone</a> = ..) -> <a href=\"moonbitlang/x/time#ZonedDateTime\">ZonedDateTime</a>!<a href=\"moonbitlang/core/error#Error\">Error</a>",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "zoned_date_time.mbt",
            "line": 91,
            "column": 23
          }
        },
        {
          "name": "hour",
          "docstring": " Returns the hour of this datetime.",
          "signature": "fn <a href=\"moonbitlang/x/time#ZonedDateTime\">ZonedDateTime</a>::hour(self : <a href=\"moonbitlang/x/time#ZonedDateTime\">ZonedDateTime</a>) -> Int",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "zoned_date_time.mbt",
            "line": 208,
            "column": 23
          }
        },
        {
          "name": "in_leap_year",
          "docstring": " Checks if this datetime is in a leap year.",
          "signature": "fn <a href=\"moonbitlang/x/time#ZonedDateTime\">ZonedDateTime</a>::in_leap_year(self : <a href=\"moonbitlang/x/time#ZonedDateTime\">ZonedDateTime</a>) -> Bool",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "zoned_date_time.mbt",
            "line": 203,
            "column": 23
          }
        },
        {
          "name": "minute",
          "docstring": " Returns the minute of this datetime.",
          "signature": "fn <a href=\"moonbitlang/x/time#ZonedDateTime\">ZonedDateTime</a>::minute(self : <a href=\"moonbitlang/x/time#ZonedDateTime\">ZonedDateTime</a>) -> Int",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "zoned_date_time.mbt",
            "line": 213,
            "column": 23
          }
        },
        {
          "name": "month",
          "docstring": " Returns the month of this datetime.",
          "signature": "fn <a href=\"moonbitlang/x/time#ZonedDateTime\">ZonedDateTime</a>::month(self : <a href=\"moonbitlang/x/time#ZonedDateTime\">ZonedDateTime</a>) -> Int",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "zoned_date_time.mbt",
            "line": 163,
            "column": 23
          }
        },
        {
          "name": "months_in_year",
          "docstring": " Returns the number of months in a year of this datetime.",
          "signature": "fn <a href=\"moonbitlang/x/time#ZonedDateTime\">ZonedDateTime</a>::months_in_year(self : <a href=\"moonbitlang/x/time#ZonedDateTime\">ZonedDateTime</a>) -> Int",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "zoned_date_time.mbt",
            "line": 198,
            "column": 23
          }
        },
        {
          "name": "nanosecond",
          "docstring": " Returns the nanosecond of this datetime.",
          "signature": "fn <a href=\"moonbitlang/x/time#ZonedDateTime\">ZonedDateTime</a>::nanosecond(self : <a href=\"moonbitlang/x/time#ZonedDateTime\">ZonedDateTime</a>) -> Int",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "zoned_date_time.mbt",
            "line": 223,
            "column": 23
          }
        },
        {
          "name": "of",
          "docstring": " Creates a ZonedDateTime from year, month, day, hour, minute and second.\n The default time zone is UTC+0.",
          "signature": "fn <a href=\"moonbitlang/x/time#ZonedDateTime\">ZonedDateTime</a>::of(year : Int, month : Int, day : Int, hour~ : Int = .., minute~ : Int = .., second~ : Int = .., nanosecond~ : Int = .., zone~ : <a href=\"moonbitlang/x/time#Zone\">Zone</a> = ..) -> <a href=\"moonbitlang/x/time#ZonedDateTime\">ZonedDateTime</a>!<a href=\"moonbitlang/core/error#Error\">Error</a>",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "zoned_date_time.mbt",
            "line": 58,
            "column": 23
          }
        },
        {
          "name": "offset",
          "docstring": " Returns the time offset of this datetime.",
          "signature": "fn <a href=\"moonbitlang/x/time#ZonedDateTime\">ZonedDateTime</a>::offset(self : <a href=\"moonbitlang/x/time#ZonedDateTime\">ZonedDateTime</a>) -> <a href=\"moonbitlang/x/time#ZoneOffset\">ZoneOffset</a>",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "zoned_date_time.mbt",
            "line": 233,
            "column": 8
          }
        },
        {
          "name": "ordinal",
          "docstring": " Returns the ordinal day of year of this datetime.",
          "signature": "fn <a href=\"moonbitlang/x/time#ZonedDateTime\">ZonedDateTime</a>::ordinal(self : <a href=\"moonbitlang/x/time#ZonedDateTime\">ZonedDateTime</a>) -> Int",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "zoned_date_time.mbt",
            "line": 178,
            "column": 23
          }
        },
        {
          "name": "second",
          "docstring": " Returns the second of this datetime.",
          "signature": "fn <a href=\"moonbitlang/x/time#ZonedDateTime\">ZonedDateTime</a>::second(self : <a href=\"moonbitlang/x/time#ZonedDateTime\">ZonedDateTime</a>) -> Int",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "zoned_date_time.mbt",
            "line": 218,
            "column": 23
          }
        },
        {
          "name": "to_plain_date",
          "docstring": " Returns the date part of this datetime, without timezone.",
          "signature": "fn <a href=\"moonbitlang/x/time#ZonedDateTime\">ZonedDateTime</a>::to_plain_date(self : <a href=\"moonbitlang/x/time#ZonedDateTime\">ZonedDateTime</a>) -> <a href=\"moonbitlang/x/time#PlainDate\">PlainDate</a>",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "zoned_date_time.mbt",
            "line": 133,
            "column": 23
          }
        },
        {
          "name": "to_plain_date_time",
          "docstring": " Returns the datetime part of this datetime, without timezone.",
          "signature": "fn <a href=\"moonbitlang/x/time#ZonedDateTime\">ZonedDateTime</a>::to_plain_date_time(self : <a href=\"moonbitlang/x/time#ZonedDateTime\">ZonedDateTime</a>) -> <a href=\"moonbitlang/x/time#PlainDateTime\">PlainDateTime</a>",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "zoned_date_time.mbt",
            "line": 143,
            "column": 23
          }
        },
        {
          "name": "to_plain_time",
          "docstring": " Returns the time part of this datetime, without timezone.",
          "signature": "fn <a href=\"moonbitlang/x/time#ZonedDateTime\">ZonedDateTime</a>::to_plain_time(self : <a href=\"moonbitlang/x/time#ZonedDateTime\">ZonedDateTime</a>) -> <a href=\"moonbitlang/x/time#PlainTime\">PlainTime</a>",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "zoned_date_time.mbt",
            "line": 138,
            "column": 23
          }
        },
        {
          "name": "to_string",
          "docstring": " Returns a string representing this datetime, like \"2008-08-08T20:00:00+8:00[Asia/Beijing]\"",
          "signature": "fn <a href=\"moonbitlang/x/time#ZonedDateTime\">ZonedDateTime</a>::to_string(self : <a href=\"moonbitlang/x/time#ZonedDateTime\">ZonedDateTime</a>) -> String",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "zoned_date_time.mbt",
            "line": 102,
            "column": 23
          }
        },
        {
          "name": "to_unix_second",
          "docstring": " Returns the elapsed seconds since the unix epoch.",
          "signature": "fn <a href=\"moonbitlang/x/time#ZonedDateTime\">ZonedDateTime</a>::to_unix_second(self : <a href=\"moonbitlang/x/time#ZonedDateTime\">ZonedDateTime</a>) -> Int64",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "zoned_date_time.mbt",
            "line": 128,
            "column": 23
          }
        },
        {
          "name": "weekday",
          "docstring": " Returns the weekday of this datetime.",
          "signature": "fn <a href=\"moonbitlang/x/time#ZonedDateTime\">ZonedDateTime</a>::weekday(self : <a href=\"moonbitlang/x/time#ZonedDateTime\">ZonedDateTime</a>) -> <a href=\"moonbitlang/x/time#Weekday\">Weekday</a>",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "zoned_date_time.mbt",
            "line": 173,
            "column": 23
          }
        },
        {
          "name": "with_day",
          "docstring": " Returns a new datetime with the specified day of the month.",
          "signature": "fn <a href=\"moonbitlang/x/time#ZonedDateTime\">ZonedDateTime</a>::with_day(self : <a href=\"moonbitlang/x/time#ZonedDateTime\">ZonedDateTime</a>, day : Int) -> <a href=\"moonbitlang/x/time#ZonedDateTime\">ZonedDateTime</a>!<a href=\"moonbitlang/core/error#Error\">Error</a>",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "zoned_date_time.mbt",
            "line": 318,
            "column": 23
          }
        },
        {
          "name": "with_hour",
          "docstring": " Returns a new datetime with the specified hour.",
          "signature": "fn <a href=\"moonbitlang/x/time#ZonedDateTime\">ZonedDateTime</a>::with_hour(self : <a href=\"moonbitlang/x/time#ZonedDateTime\">ZonedDateTime</a>, hour : Int) -> <a href=\"moonbitlang/x/time#ZonedDateTime\">ZonedDateTime</a>!<a href=\"moonbitlang/core/error#Error\">Error</a>",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "zoned_date_time.mbt",
            "line": 334,
            "column": 23
          }
        },
        {
          "name": "with_minute",
          "docstring": " Returns a new datetime with the specified minute.",
          "signature": "fn <a href=\"moonbitlang/x/time#ZonedDateTime\">ZonedDateTime</a>::with_minute(self : <a href=\"moonbitlang/x/time#ZonedDateTime\">ZonedDateTime</a>, minute : Int) -> <a href=\"moonbitlang/x/time#ZonedDateTime\">ZonedDateTime</a>!<a href=\"moonbitlang/core/error#Error\">Error</a>",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "zoned_date_time.mbt",
            "line": 342,
            "column": 23
          }
        },
        {
          "name": "with_month",
          "docstring": " Returns a new datetime with the specified month.",
          "signature": "fn <a href=\"moonbitlang/x/time#ZonedDateTime\">ZonedDateTime</a>::with_month(self : <a href=\"moonbitlang/x/time#ZonedDateTime\">ZonedDateTime</a>, month : Int) -> <a href=\"moonbitlang/x/time#ZonedDateTime\">ZonedDateTime</a>!<a href=\"moonbitlang/core/error#Error\">Error</a>",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "zoned_date_time.mbt",
            "line": 310,
            "column": 23
          }
        },
        {
          "name": "with_nanosecond",
          "docstring": " Returns a new datetime with the specified nanosecond.",
          "signature": "fn <a href=\"moonbitlang/x/time#ZonedDateTime\">ZonedDateTime</a>::with_nanosecond(self : <a href=\"moonbitlang/x/time#ZonedDateTime\">ZonedDateTime</a>, nanosecond : Int) -> <a href=\"moonbitlang/x/time#ZonedDateTime\">ZonedDateTime</a>!<a href=\"moonbitlang/core/error#Error\">Error</a>",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "zoned_date_time.mbt",
            "line": 358,
            "column": 23
          }
        },
        {
          "name": "with_ordinal",
          "docstring": " Returns a new datetime with the specified ordinal day of the year.",
          "signature": "fn <a href=\"moonbitlang/x/time#ZonedDateTime\">ZonedDateTime</a>::with_ordinal(self : <a href=\"moonbitlang/x/time#ZonedDateTime\">ZonedDateTime</a>, ordinal : Int) -> <a href=\"moonbitlang/x/time#ZonedDateTime\">ZonedDateTime</a>!<a href=\"moonbitlang/core/error#Error\">Error</a>",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "zoned_date_time.mbt",
            "line": 326,
            "column": 23
          }
        },
        {
          "name": "with_second",
          "docstring": " Returns a new datetime with the specified second.",
          "signature": "fn <a href=\"moonbitlang/x/time#ZonedDateTime\">ZonedDateTime</a>::with_second(self : <a href=\"moonbitlang/x/time#ZonedDateTime\">ZonedDateTime</a>, second : Int) -> <a href=\"moonbitlang/x/time#ZonedDateTime\">ZonedDateTime</a>!<a href=\"moonbitlang/core/error#Error\">Error</a>",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "zoned_date_time.mbt",
            "line": 350,
            "column": 23
          }
        },
        {
          "name": "with_year",
          "docstring": " Returns a new datetime with the specified year.",
          "signature": "fn <a href=\"moonbitlang/x/time#ZonedDateTime\">ZonedDateTime</a>::with_year(self : <a href=\"moonbitlang/x/time#ZonedDateTime\">ZonedDateTime</a>, year : Int) -> <a href=\"moonbitlang/x/time#ZonedDateTime\">ZonedDateTime</a>!<a href=\"moonbitlang/core/error#Error\">Error</a>",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "zoned_date_time.mbt",
            "line": 302,
            "column": 23
          }
        },
        {
          "name": "year",
          "docstring": " Returns the year of this datetime.",
          "signature": "fn <a href=\"moonbitlang/x/time#ZonedDateTime\">ZonedDateTime</a>::year(self : <a href=\"moonbitlang/x/time#ZonedDateTime\">ZonedDateTime</a>) -> Int",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "zoned_date_time.mbt",
            "line": 158,
            "column": 23
          }
        },
        {
          "name": "zone",
          "docstring": " Returns the time zone of this datetime.",
          "signature": "fn <a href=\"moonbitlang/x/time#ZonedDateTime\">ZonedDateTime</a>::zone(self : <a href=\"moonbitlang/x/time#ZonedDateTime\">ZonedDateTime</a>) -> <a href=\"moonbitlang/x/time#Zone\">Zone</a>",
          "loc": {
            "path": "moonbitlang/x/time",
            "file": "zoned_date_time.mbt",
            "line": 228,
            "column": 8
          }
        }
      ],
      "impls": [
        {
          "self": {
            "kind": "constr",
            "constructor": {
              "name": "ZonedDateTime",
              "path": "moonbitlang/x/time"
            },
            "arguments": []
          },
          "trait": { "name": "Show", "path": "moonbitlang/core/builtin" },
          "methods": [
            {
              "name": "output",
              "docstring": "",
              "signature": "fn output(self : <a href=\"moonbitlang/x/time#ZonedDateTime\">ZonedDateTime</a>, logger : <a href=\"moonbitlang/core/builtin#Logger\">Logger</a>) -> Unit",
              "loc": {
                "path": "moonbitlang/x/time",
                "file": "zoned_date_time.mbt",
                "line": 120,
                "column": 38
              }
            }
          ]
        }
      ]
    }
  ],
  "typealias": [],
  "values": [
    {
      "name": "date_time",
      "docstring": " Creates a ZonedDateTime from year, month, day, hour, minute, second and a time zone.\n The default time zone is UTC+0.",
      "signature": "fn date_time(year : Int, month : Int, day : Int, hour~ : Int = .., minute~ : Int = .., second~ : Int = .., nanosecond~ : Int = .., zone~ : <a href=\"moonbitlang/x/time#Zone\">Zone</a> = ..) -> <a href=\"moonbitlang/x/time#ZonedDateTime\">ZonedDateTime</a>!<a href=\"moonbitlang/core/error#Error\">Error</a>",
      "loc": {
        "path": "moonbitlang/x/time",
        "file": "zoned_date_time.mbt",
        "line": 24,
        "column": 8
      }
    },
    {
      "name": "fixed_zone",
      "docstring": " Creates a time zone with fixed offset from time zone id and offset seconds.",
      "signature": "fn fixed_zone(id : String, offset_seconds : Int, abbrev~ : String = .., dst~ : Bool = ..) -> <a href=\"moonbitlang/x/time#Zone\">Zone</a>!<a href=\"moonbitlang/core/error#Error\">Error</a>",
      "loc": {
        "path": "moonbitlang/x/time",
        "file": "zone.mbt",
        "line": 26,
        "column": 8
      }
    },
    {
      "name": "unix",
      "docstring": " Creates a ZonedDateTime from elapsed seconds since the unix epoch and a time zone.\n The default time zone is UTC+0.",
      "signature": "fn unix(second : Int64, nanosecond~ : Int = .., zone~ : <a href=\"moonbitlang/x/time#Zone\">Zone</a> = ..) -> <a href=\"moonbitlang/x/time#ZonedDateTime\">ZonedDateTime</a>!<a href=\"moonbitlang/core/error#Error\">Error</a>",
      "loc": {
        "path": "moonbitlang/x/time",
        "file": "zoned_date_time.mbt",
        "line": 48,
        "column": 8
      }
    },
    {
      "name": "utc_offset",
      "docstring": " UTC+0 offset.",
      "signature": "let utc_offset : <a href=\"moonbitlang/x/time#ZoneOffset\">ZoneOffset</a>",
      "loc": {
        "path": "moonbitlang/x/time",
        "file": "zone_offset.mbt",
        "line": 36,
        "column": 9
      }
    },
    {
      "name": "utc_zone",
      "docstring": " UTC time zone.",
      "signature": "let utc_zone : <a href=\"moonbitlang/x/time#Zone\">Zone</a>",
      "loc": {
        "path": "moonbitlang/x/time",
        "file": "zone.mbt",
        "line": 23,
        "column": 9
      }
    }
  ],
  "misc": []
}