{
  "name": "moonbitlang/x/crypto",
  "traits": [],
  "types": [
    {
      "name": "MD5Context",
      "docstring": "",
      "signature": "type MD5Context",
      "loc": {
        "path": "moonbitlang/x/crypto",
        "file": "md5.mbt",
        "line": 20,
        "column": 8
      },
      "methods": [
        {
          "name": "finalize",
          "docstring": " an alias of `MD5Context::compute()`",
          "signature": "fn <a href=\"moonbitlang/x/crypto#MD5Context\">MD5Context</a>::finalize(self : <a href=\"moonbitlang/x/crypto#MD5Context\">MD5Context</a>) -> <a href=\"moonbitlang/core/array#FixedArray\">FixedArray</a>[Byte]",
          "loc": {
            "path": "moonbitlang/x/crypto",
            "file": "md5.mbt",
            "line": 35,
            "column": 20
          }
        },
        {
          "name": "new",
          "docstring": " Instantiate a MD5 context",
          "signature": "fn <a href=\"moonbitlang/x/crypto#MD5Context\">MD5Context</a>::new() -> <a href=\"moonbitlang/x/crypto#MD5Context\">MD5Context</a>",
          "loc": {
            "path": "moonbitlang/x/crypto",
            "file": "md5.mbt",
            "line": 40,
            "column": 20
          }
        },
        {
          "name": "update",
          "docstring": " update the state of given context from new `data` ",
          "signature": "fn <a href=\"moonbitlang/x/crypto#MD5Context\">MD5Context</a>::update(self : <a href=\"moonbitlang/x/crypto#MD5Context\">MD5Context</a>, data : <a href=\"moonbitlang/core/array#FixedArray\">FixedArray</a>[Byte]) -> Unit",
          "loc": {
            "path": "moonbitlang/x/crypto",
            "file": "md5.mbt",
            "line": 30,
            "column": 20
          }
        }
      ],
      "impls": []
    },
    {
      "name": "SM3Context",
      "docstring": "",
      "signature": "type SM3Context",
      "loc": {
        "path": "moonbitlang/x/crypto",
        "file": "sm3.mbt",
        "line": 20,
        "column": 8
      },
      "methods": [
        {
          "name": "finalize",
          "docstring": " Compute the SM3 digest from given SM3Context",
          "signature": "fn <a href=\"moonbitlang/x/crypto#SM3Context\">SM3Context</a>::finalize(self : <a href=\"moonbitlang/x/crypto#SM3Context\">SM3Context</a>) -> <a href=\"moonbitlang/core/array#FixedArray\">FixedArray</a>[Byte]",
          "loc": {
            "path": "moonbitlang/x/crypto",
            "file": "sm3.mbt",
            "line": 256,
            "column": 20
          }
        },
        {
          "name": "new",
          "docstring": " Instantiate a SM3 context",
          "signature": "fn <a href=\"moonbitlang/x/crypto#SM3Context\">SM3Context</a>::new() -> <a href=\"moonbitlang/x/crypto#SM3Context\">SM3Context</a>",
          "loc": {
            "path": "moonbitlang/x/crypto",
            "file": "sm3.mbt",
            "line": 28,
            "column": 20
          }
        },
        {
          "name": "update",
          "docstring": " update the state of given context from new `data` ",
          "signature": "fn <a href=\"moonbitlang/x/crypto#SM3Context\">SM3Context</a>::update(self : <a href=\"moonbitlang/x/crypto#SM3Context\">SM3Context</a>, data : <a href=\"moonbitlang/core/array#FixedArray\">FixedArray</a>[Byte]) -> Unit",
          "loc": {
            "path": "moonbitlang/x/crypto",
            "file": "sm3.mbt",
            "line": 215,
            "column": 20
          }
        },
        {
          "name": "update_from_iter",
          "docstring": "",
          "signature": "fn <a href=\"moonbitlang/x/crypto#SM3Context\">SM3Context</a>::update_from_iter(self : <a href=\"moonbitlang/x/crypto#SM3Context\">SM3Context</a>, data : <a href=\"moonbitlang/core/builtin#Iter\">Iter</a>[Byte]) -> Unit",
          "loc": {
            "path": "moonbitlang/x/crypto",
            "file": "sm3.mbt",
            "line": 198,
            "column": 20
          }
        }
      ],
      "impls": []
    },
    {
      "name": "Sha256Context",
      "docstring": "",
      "signature": "type Sha256Context",
      "loc": {
        "path": "moonbitlang/x/crypto",
        "file": "sha256.mbt",
        "line": 16,
        "column": 8
      },
      "methods": [
        {
          "name": "finalize",
          "docstring": " Compute the Sha256 digest from given Sha256Context",
          "signature": "fn <a href=\"moonbitlang/x/crypto#Sha256Context\">Sha256Context</a>::finalize(self : <a href=\"moonbitlang/x/crypto#Sha256Context\">Sha256Context</a>) -> <a href=\"moonbitlang/core/array#FixedArray\">FixedArray</a>[Byte]",
          "loc": {
            "path": "moonbitlang/x/crypto",
            "file": "sha256.mbt",
            "line": 190,
            "column": 8
          }
        },
        {
          "name": "new",
          "docstring": " Instantiate a Sha256 context\n `reg` is the initial hash value. Defaults to Sha256's.",
          "signature": "fn <a href=\"moonbitlang/x/crypto#Sha256Context\">Sha256Context</a>::new(reg~ : <a href=\"moonbitlang/core/array#FixedArray\">FixedArray</a>[UInt] = ..) -> <a href=\"moonbitlang/x/crypto#Sha256Context\">Sha256Context</a>",
          "loc": {
            "path": "moonbitlang/x/crypto",
            "file": "sha256.mbt",
            "line": 25,
            "column": 23
          }
        },
        {
          "name": "update",
          "docstring": " update the state of given context from new `data` ",
          "signature": "fn <a href=\"moonbitlang/x/crypto#Sha256Context\">Sha256Context</a>::update(self : <a href=\"moonbitlang/x/crypto#Sha256Context\">Sha256Context</a>, data : <a href=\"moonbitlang/core/array#FixedArray\">FixedArray</a>[Byte]) -> Unit",
          "loc": {
            "path": "moonbitlang/x/crypto",
            "file": "sha256.mbt",
            "line": 149,
            "column": 8
          }
        },
        {
          "name": "update_from_iter",
          "docstring": "",
          "signature": "fn <a href=\"moonbitlang/x/crypto#Sha256Context\">Sha256Context</a>::update_from_iter(self : <a href=\"moonbitlang/x/crypto#Sha256Context\">Sha256Context</a>, data : <a href=\"moonbitlang/core/builtin#Iter\">Iter</a>[Byte]) -> Unit",
          "loc": {
            "path": "moonbitlang/x/crypto",
            "file": "sha256.mbt",
            "line": 135,
            "column": 8
          }
        }
      ],
      "impls": []
    }
  ],
  "typealias": [],
  "values": [
    {
      "name": "bytes_to_hex_string",
      "docstring": " print a sequence of byte in hex representation",
      "signature": "fn bytes_to_hex_string(input : <a href=\"moonbitlang/core/array#FixedArray\">FixedArray</a>[Byte]) -> String",
      "loc": {
        "path": "moonbitlang/x/crypto",
        "file": "utils.mbt",
        "line": 21,
        "column": 8
      }
    },
    {
      "name": "chacha12",
      "docstring": " Encrypts a block of data using the ChaCha12 algorithm.\n - [key] must be 8 32-bit unsigned integers.\n - [counter] is the counter value.\n - [block] is the block of data to be encrypted.\n - [nonce] is default to 0\n - Returns the encrypted block of data.",
      "signature": "fn chacha12(key : <a href=\"moonbitlang/core/array#FixedArray\">FixedArray</a>[UInt], counter : UInt, block : <a href=\"moonbitlang/core/array#FixedArray\">FixedArray</a>[Byte], nonce~ : UInt = ..) -> <a href=\"moonbitlang/core/array#FixedArray\">FixedArray</a>[Byte]!<a href=\"moonbitlang/core/error#Error\">Error</a>",
      "loc": {
        "path": "moonbitlang/x/crypto",
        "file": "chacha.mbt",
        "line": 326,
        "column": 8
      }
    },
    {
      "name": "chacha20",
      "docstring": " Encrypts a block of data using the ChaCha20 algorithm.\n - [key] must be 8 32-bit unsigned integers.\n - [counter] is the counter value.\n - [block] is the block of data to be encrypted.\n - [nonce] is default to 0\n - Returns the encrypted block of data.",
      "signature": "fn chacha20(key : <a href=\"moonbitlang/core/array#FixedArray\">FixedArray</a>[UInt], counter : UInt, block : <a href=\"moonbitlang/core/array#FixedArray\">FixedArray</a>[Byte], nonce~ : UInt = ..) -> <a href=\"moonbitlang/core/array#FixedArray\">FixedArray</a>[Byte]!<a href=\"moonbitlang/core/error#Error\">Error</a>",
      "loc": {
        "path": "moonbitlang/x/crypto",
        "file": "chacha.mbt",
        "line": 344,
        "column": 8
      }
    },
    {
      "name": "chacha8",
      "docstring": " Encrypts a block of data using the ChaCha8 algorithm.\n - [key] must be 8 32-bit unsigned integers.\n - [counter] is the counter value.\n - [block] is the block of data to be encrypted.\n - [nonce] is default to 0\n - Returns the encrypted block of data.",
      "signature": "fn chacha8(key : <a href=\"moonbitlang/core/array#FixedArray\">FixedArray</a>[UInt], counter : UInt, block : <a href=\"moonbitlang/core/array#FixedArray\">FixedArray</a>[Byte], nonce~ : UInt = ..) -> <a href=\"moonbitlang/core/array#FixedArray\">FixedArray</a>[Byte]!<a href=\"moonbitlang/core/error#Error\">Error</a>",
      "loc": {
        "path": "moonbitlang/x/crypto",
        "file": "chacha.mbt",
        "line": 308,
        "column": 8
      }
    },
    {
      "name": "md5",
      "docstring": " Compute the MD5 digest of some `data` based on [RFC1321](https://www.ietf.org/rfc/rfc1321.txt).\n - Note that MD5 is considered _cryptographically broken_.\n Unless mandated, more secure alternatives should be preferred.",
      "signature": "fn md5(data : <a href=\"moonbitlang/core/array#FixedArray\">FixedArray</a>[Byte]) -> <a href=\"moonbitlang/core/array#FixedArray\">FixedArray</a>[Byte]",
      "loc": {
        "path": "moonbitlang/x/crypto",
        "file": "md5.mbt",
        "line": 231,
        "column": 8
      }
    },
    {
      "name": "sha1",
      "docstring": "",
      "signature": "fn sha1(input : <a href=\"moonbitlang/core/array#FixedArray\">FixedArray</a>[Byte]) -> <a href=\"moonbitlang/core/array#FixedArray\">FixedArray</a>[Byte]",
      "loc": {
        "path": "moonbitlang/x/crypto",
        "file": "sha1.mbt",
        "line": 16,
        "column": 8
      }
    },
    {
      "name": "sha224",
      "docstring": "",
      "signature": "fn sha224(data : <a href=\"moonbitlang/core/array#FixedArray\">FixedArray</a>[Byte]) -> <a href=\"moonbitlang/core/array#FixedArray\">FixedArray</a>[Byte]",
      "loc": {
        "path": "moonbitlang/x/crypto",
        "file": "sha224.mbt",
        "line": 16,
        "column": 8
      }
    },
    {
      "name": "sha224_from_iter",
      "docstring": "",
      "signature": "fn sha224_from_iter(data : <a href=\"moonbitlang/core/builtin#Iter\">Iter</a>[Byte]) -> <a href=\"moonbitlang/core/array#FixedArray\">FixedArray</a>[Byte]",
      "loc": {
        "path": "moonbitlang/x/crypto",
        "file": "sha224.mbt",
        "line": 26,
        "column": 8
      }
    },
    {
      "name": "sha256",
      "docstring": " Compute the Sha256 digest in `Bytes` of some `data`. Note that Sha256 is big-endian.",
      "signature": "fn sha256(data : <a href=\"moonbitlang/core/array#FixedArray\">FixedArray</a>[Byte]) -> <a href=\"moonbitlang/core/array#FixedArray\">FixedArray</a>[Byte]",
      "loc": {
        "path": "moonbitlang/x/crypto",
        "file": "sha256.mbt",
        "line": 195,
        "column": 8
      }
    },
    {
      "name": "sha256_from_iter",
      "docstring": "",
      "signature": "fn sha256_from_iter(data : <a href=\"moonbitlang/core/builtin#Iter\">Iter</a>[Byte]) -> <a href=\"moonbitlang/core/array#FixedArray\">FixedArray</a>[Byte]",
      "loc": {
        "path": "moonbitlang/x/crypto",
        "file": "sha256.mbt",
        "line": 202,
        "column": 8
      }
    },
    {
      "name": "sm3",
      "docstring": " Compute the SM3 digest in `FixedArray[Byte]` of some `data`. Note that SM3 is big-endian.",
      "signature": "fn sm3(data : <a href=\"moonbitlang/core/array#FixedArray\">FixedArray</a>[Byte]) -> <a href=\"moonbitlang/core/array#FixedArray\">FixedArray</a>[Byte]",
      "loc": {
        "path": "moonbitlang/x/crypto",
        "file": "sm3.mbt",
        "line": 261,
        "column": 8
      }
    },
    {
      "name": "sm3_from_iter",
      "docstring": "",
      "signature": "fn sm3_from_iter(data : <a href=\"moonbitlang/core/builtin#Iter\">Iter</a>[Byte]) -> <a href=\"moonbitlang/core/array#FixedArray\">FixedArray</a>[Byte]",
      "loc": {
        "path": "moonbitlang/x/crypto",
        "file": "sm3.mbt",
        "line": 268,
        "column": 8
      }
    },
    {
      "name": "uints_to_hex_string",
      "docstring": " print a sequence of uint in hex representation",
      "signature": "fn uints_to_hex_string(input : <a href=\"moonbitlang/core/builtin#Iter\">Iter</a>[UInt]) -> String",
      "loc": {
        "path": "moonbitlang/x/crypto",
        "file": "utils.mbt",
        "line": 46,
        "column": 8
      }
    }
  ],
  "misc": []
}