{
  "name": "moonbitlang/core/immut/sorted_map",
  "traits": [],
  "types": [
    {
      "name": "T",
      "docstring": "\n Immutable map, consists of key-value pairs.\n\n # Example\n\n ```\n let map1 = @sorted_map.of([(3, \"three\"), (8, \"eight\"), (1, \"one\")])\n let map2 = map1.add(2, \"two\").remove(3)\n assert_eq!(map2.lookup(2), Some(\"two\"))\n let map3 = map2.add(2, \"updated\")\n assert_eq!(map2.lookup(3), None)\n assert_eq!(map3.lookup(3), None)\n assert_eq!(map3.lookup(2), Some(\"updated\"))\n ```",
      "signature": "type T[K, V]",
      "loc": {
        "path": "moonbitlang/core/immut/sorted_map",
        "file": "types.mbt",
        "line": 35,
        "column": 6
      },
      "methods": [
        {
          "name": "add",
          "docstring": "\n Create a new map with a key-value pair inserted.\n O(log n).\n",
          "signature": "fn <a href=\"moonbitlang/core/immut/sorted_map#T\">T</a>::add[K : <a href=\"moonbitlang/core/builtin#Compare\">Compare</a> + <a href=\"moonbitlang/core/builtin#Eq\">Eq</a>, V](self : <a href=\"moonbitlang/core/immut/sorted_map#T\">T</a>[K, V], key : K, value : V) -> <a href=\"moonbitlang/core/immut/sorted_map#T\">T</a>[K, V]",
          "loc": {
            "path": "moonbitlang/core/immut/sorted_map",
            "file": "map.mbt",
            "line": 19,
            "column": 8
          }
        },
        {
          "name": "contains",
          "docstring": "\n Check if the map contains a key.\n O(log n).",
          "signature": "fn <a href=\"moonbitlang/core/immut/sorted_map#T\">T</a>::contains[K : <a href=\"moonbitlang/core/builtin#Compare\">Compare</a> + <a href=\"moonbitlang/core/builtin#Eq\">Eq</a>, V](self : <a href=\"moonbitlang/core/immut/sorted_map#T\">T</a>[K, V], key : K) -> Bool",
          "loc": {
            "path": "moonbitlang/core/immut/sorted_map",
            "file": "utils.mbt",
            "line": 36,
            "column": 8
          }
        },
        {
          "name": "each",
          "docstring": "\n Iterate over the key-value pairs in the map.",
          "signature": "fn <a href=\"moonbitlang/core/immut/sorted_map#T\">T</a>::each[K, V](self : <a href=\"moonbitlang/core/immut/sorted_map#T\">T</a>[K, V], f : (K, V) -> Unit) -> Unit",
          "loc": {
            "path": "moonbitlang/core/immut/sorted_map",
            "file": "utils.mbt",
            "line": 98,
            "column": 8
          }
        },
        {
          "name": "eachi",
          "docstring": "\n Iterate over the key-value pairs with index.",
          "signature": "fn <a href=\"moonbitlang/core/immut/sorted_map#T\">T</a>::eachi[K, V](self : <a href=\"moonbitlang/core/immut/sorted_map#T\">T</a>[K, V], f : (Int, K, V) -> Unit) -> Unit",
          "loc": {
            "path": "moonbitlang/core/immut/sorted_map",
            "file": "utils.mbt",
            "line": 111,
            "column": 8
          }
        },
        {
          "name": "elems",
          "docstring": "\n Return all elements of the map in the ascending order of their keys.",
          "signature": "fn <a href=\"moonbitlang/core/immut/sorted_map#T\">T</a>::elems[K, V](self : <a href=\"moonbitlang/core/immut/sorted_map#T\">T</a>[K, V]) -> <a href=\"moonbitlang/core/array#Array\">Array</a>[V]",
          "loc": {
            "path": "moonbitlang/core/immut/sorted_map",
            "file": "utils.mbt",
            "line": 264,
            "column": 8
          }
        },
        {
          "name": "empty",
          "docstring": " Create an empty map.",
          "signature": "fn <a href=\"moonbitlang/core/immut/sorted_map#T\">T</a>::empty[K, V]() -> <a href=\"moonbitlang/core/immut/sorted_map#T\">T</a>[K, V]",
          "loc": {
            "path": "moonbitlang/core/immut/sorted_map",
            "file": "utils.mbt",
            "line": 18,
            "column": 11
          }
        },
        {
          "name": "filter",
          "docstring": "\n Filter values that satisfy the predicate",
          "signature": "fn <a href=\"moonbitlang/core/immut/sorted_map#T\">T</a>::filter[K : <a href=\"moonbitlang/core/builtin#Compare\">Compare</a> + <a href=\"moonbitlang/core/builtin#Eq\">Eq</a>, V](self : <a href=\"moonbitlang/core/immut/sorted_map#T\">T</a>[K, V], pred : (V) -> Bool) -> <a href=\"moonbitlang/core/immut/sorted_map#T\">T</a>[K, V]",
          "loc": {
            "path": "moonbitlang/core/immut/sorted_map",
            "file": "map.mbt",
            "line": 96,
            "column": 8
          }
        },
        {
          "name": "filter_with_key",
          "docstring": "\n Filter key-value pairs that satisfy the predicate",
          "signature": "fn <a href=\"moonbitlang/core/immut/sorted_map#T\">T</a>::filter_with_key[K : <a href=\"moonbitlang/core/builtin#Compare\">Compare</a> + <a href=\"moonbitlang/core/builtin#Eq\">Eq</a>, V](self : <a href=\"moonbitlang/core/immut/sorted_map#T\">T</a>[K, V], pred : (K, V) -> Bool) -> <a href=\"moonbitlang/core/immut/sorted_map#T\">T</a>[K, V]",
          "loc": {
            "path": "moonbitlang/core/immut/sorted_map",
            "file": "map.mbt",
            "line": 102,
            "column": 8
          }
        },
        {
          "name": "fold",
          "docstring": "\n Fold the values in the map.\n O(n).",
          "signature": "fn <a href=\"moonbitlang/core/immut/sorted_map#T\">T</a>::fold[K, V, A](self : <a href=\"moonbitlang/core/immut/sorted_map#T\">T</a>[K, V], init~ : A, f : (A, V) -> A) -> A",
          "loc": {
            "path": "moonbitlang/core/immut/sorted_map",
            "file": "utils.mbt",
            "line": 149,
            "column": 8
          }
        },
        {
          "name": "foldl_with_key",
          "docstring": "\n Pre-order fold.\n O(n).",
          "signature": "fn <a href=\"moonbitlang/core/immut/sorted_map#T\">T</a>::foldl_with_key[K, V, A](self : <a href=\"moonbitlang/core/immut/sorted_map#T\">T</a>[K, V], f : (A, K, V) -> A, init~ : A) -> A",
          "loc": {
            "path": "moonbitlang/core/immut/sorted_map",
            "file": "utils.mbt",
            "line": 174,
            "column": 8
          }
        },
        {
          "name": "foldr_with_key",
          "docstring": "\n Post-order fold.\n O(n).",
          "signature": "fn <a href=\"moonbitlang/core/immut/sorted_map#T\">T</a>::foldr_with_key[K, V, A](self : <a href=\"moonbitlang/core/immut/sorted_map#T\">T</a>[K, V], f : (A, K, V) -> A, init~ : A) -> A",
          "loc": {
            "path": "moonbitlang/core/immut/sorted_map",
            "file": "utils.mbt",
            "line": 156,
            "column": 8
          }
        },
        {
          "name": "from_array",
          "docstring": "",
          "signature": "fn <a href=\"moonbitlang/core/immut/sorted_map#T\">T</a>::from_array[K : <a href=\"moonbitlang/core/builtin#Compare\">Compare</a> + <a href=\"moonbitlang/core/builtin#Eq\">Eq</a>, V](array : <a href=\"moonbitlang/core/array#Array\">Array</a>[(K, V)]) -> <a href=\"moonbitlang/core/immut/sorted_map#T\">T</a>[K, V]",
          "loc": {
            "path": "moonbitlang/core/immut/sorted_map",
            "file": "deprecated.mbt",
            "line": 42,
            "column": 11
          }
        },
        {
          "name": "from_iter",
          "docstring": "",
          "signature": "fn <a href=\"moonbitlang/core/immut/sorted_map#T\">T</a>::from_iter[K : <a href=\"moonbitlang/core/builtin#Compare\">Compare</a> + <a href=\"moonbitlang/core/builtin#Eq\">Eq</a>, V](iter : <a href=\"moonbitlang/core/builtin#Iter\">Iter</a>[(K, V)]) -> <a href=\"moonbitlang/core/immut/sorted_map#T\">T</a>[K, V]",
          "loc": {
            "path": "moonbitlang/core/immut/sorted_map",
            "file": "deprecated.mbt",
            "line": 49,
            "column": 11
          }
        },
        {
          "name": "from_json",
          "docstring": "",
          "signature": "fn <a href=\"moonbitlang/core/immut/sorted_map#T\">T</a>::from_json[V : <a href=\"moonbitlang/core/json#FromJson\">@moonbitlang/core/json.FromJson</a>](json : <a href=\"moonbitlang/core/json#Json\">Json</a>) -> <a href=\"moonbitlang/core/immut/sorted_map#T\">T</a>[String, V]!<a href=\"moonbitlang/core/json#JsonDecodeError\">@moonbitlang/core/json.JsonDecodeError</a>",
          "loc": {
            "path": "moonbitlang/core/immut/sorted_map",
            "file": "deprecated.mbt",
            "line": 63,
            "column": 11
          }
        },
        {
          "name": "insert",
          "docstring": "\n Create a new map with a key-value pair inserted.\n O(log n).\n",
          "signature": "fn <a href=\"moonbitlang/core/immut/sorted_map#T\">T</a>::insert[K : <a href=\"moonbitlang/core/builtin#Compare\">Compare</a> + <a href=\"moonbitlang/core/builtin#Eq\">Eq</a>, V](self : <a href=\"moonbitlang/core/immut/sorted_map#T\">T</a>[K, V], key : K, value : V) -> <a href=\"moonbitlang/core/immut/sorted_map#T\">T</a>[K, V]",
          "loc": {
            "path": "moonbitlang/core/immut/sorted_map",
            "file": "deprecated.mbt",
            "line": 21,
            "column": 8
          }
        },
        {
          "name": "is_empty",
          "docstring": "",
          "signature": "fn <a href=\"moonbitlang/core/immut/sorted_map#T\">T</a>::is_empty[K, V](self : <a href=\"moonbitlang/core/immut/sorted_map#T\">T</a>[K, V]) -> Bool",
          "loc": {
            "path": "moonbitlang/core/immut/sorted_map",
            "file": "utils.mbt",
            "line": 62,
            "column": 8
          }
        },
        {
          "name": "iter",
          "docstring": "",
          "signature": "fn <a href=\"moonbitlang/core/immut/sorted_map#T\">T</a>::iter[K, V](self : <a href=\"moonbitlang/core/immut/sorted_map#T\">T</a>[K, V]) -> <a href=\"moonbitlang/core/builtin#Iter\">Iter</a>[(K, V)]",
          "loc": {
            "path": "moonbitlang/core/immut/sorted_map",
            "file": "utils.mbt",
            "line": 214,
            "column": 8
          }
        },
        {
          "name": "iter2",
          "docstring": "",
          "signature": "fn <a href=\"moonbitlang/core/immut/sorted_map#T\">T</a>::iter2[K, V](self : <a href=\"moonbitlang/core/immut/sorted_map#T\">T</a>[K, V]) -> <a href=\"moonbitlang/core/builtin#Iter2\">Iter2</a>[K, V]",
          "loc": {
            "path": "moonbitlang/core/immut/sorted_map",
            "file": "utils.mbt",
            "line": 233,
            "column": 8
          }
        },
        {
          "name": "keys",
          "docstring": "\n Return all keys of the map in ascending order.",
          "signature": "fn <a href=\"moonbitlang/core/immut/sorted_map#T\">T</a>::keys[K, V](self : <a href=\"moonbitlang/core/immut/sorted_map#T\">T</a>[K, V]) -> <a href=\"moonbitlang/core/array#Array\">Array</a>[K]",
          "loc": {
            "path": "moonbitlang/core/immut/sorted_map",
            "file": "utils.mbt",
            "line": 258,
            "column": 8
          }
        },
        {
          "name": "lookup",
          "docstring": "\n Get the value associated with a key.\n O(log n).",
          "signature": "fn <a href=\"moonbitlang/core/immut/sorted_map#T\">T</a>::lookup[K : <a href=\"moonbitlang/core/builtin#Compare\">Compare</a> + <a href=\"moonbitlang/core/builtin#Eq\">Eq</a>, V](self : <a href=\"moonbitlang/core/immut/sorted_map#T\">T</a>[K, V], key : K) -> V?",
          "loc": {
            "path": "moonbitlang/core/immut/sorted_map",
            "file": "utils.mbt",
            "line": 75,
            "column": 8
          }
        },
        {
          "name": "map",
          "docstring": "\n Ts over the values in the map.",
          "signature": "fn <a href=\"moonbitlang/core/immut/sorted_map#T\">T</a>::map[K, X, Y](self : <a href=\"moonbitlang/core/immut/sorted_map#T\">T</a>[K, X], f : (X) -> Y) -> <a href=\"moonbitlang/core/immut/sorted_map#T\">T</a>[K, Y]",
          "loc": {
            "path": "moonbitlang/core/immut/sorted_map",
            "file": "utils.mbt",
            "line": 128,
            "column": 8
          }
        },
        {
          "name": "map_with_key",
          "docstring": "\n Maps over the key-value pairs in the map.",
          "signature": "fn <a href=\"moonbitlang/core/immut/sorted_map#T\">T</a>::map_with_key[K, X, Y](self : <a href=\"moonbitlang/core/immut/sorted_map#T\">T</a>[K, X], f : (K, X) -> Y) -> <a href=\"moonbitlang/core/immut/sorted_map#T\">T</a>[K, Y]",
          "loc": {
            "path": "moonbitlang/core/immut/sorted_map",
            "file": "utils.mbt",
            "line": 138,
            "column": 8
          }
        },
        {
          "name": "new",
          "docstring": "",
          "signature": "fn <a href=\"moonbitlang/core/immut/sorted_map#T\">T</a>::new[K, V]() -> <a href=\"moonbitlang/core/immut/sorted_map#T\">T</a>[K, V]",
          "loc": {
            "path": "moonbitlang/core/immut/sorted_map",
            "file": "deprecated.mbt",
            "line": 28,
            "column": 11
          }
        },
        {
          "name": "of",
          "docstring": "",
          "signature": "fn <a href=\"moonbitlang/core/immut/sorted_map#T\">T</a>::of[K : <a href=\"moonbitlang/core/builtin#Compare\">Compare</a> + <a href=\"moonbitlang/core/builtin#Eq\">Eq</a>, V](array : <a href=\"moonbitlang/core/array#FixedArray\">FixedArray</a>[(K, V)]) -> <a href=\"moonbitlang/core/immut/sorted_map#T\">T</a>[K, V]",
          "loc": {
            "path": "moonbitlang/core/immut/sorted_map",
            "file": "deprecated.mbt",
            "line": 56,
            "column": 11
          }
        },
        {
          "name": "op_get",
          "docstring": "",
          "signature": "fn <a href=\"moonbitlang/core/immut/sorted_map#T\">T</a>::op_get[K : <a href=\"moonbitlang/core/builtin#Compare\">Compare</a> + <a href=\"moonbitlang/core/builtin#Eq\">Eq</a>, V](self : <a href=\"moonbitlang/core/immut/sorted_map#T\">T</a>[K, V], key : K) -> V?",
          "loc": {
            "path": "moonbitlang/core/immut/sorted_map",
            "file": "utils.mbt",
            "line": 92,
            "column": 8
          }
        },
        {
          "name": "remove",
          "docstring": "\n Create a new map with a key-value pair removed. O(log n).\n If the key is not a member or map, the original map is returned.",
          "signature": "fn <a href=\"moonbitlang/core/immut/sorted_map#T\">T</a>::remove[K : <a href=\"moonbitlang/core/builtin#Compare\">Compare</a> + <a href=\"moonbitlang/core/builtin#Eq\">Eq</a>, V](self : <a href=\"moonbitlang/core/immut/sorted_map#T\">T</a>[K, V], key : K) -> <a href=\"moonbitlang/core/immut/sorted_map#T\">T</a>[K, V]",
          "loc": {
            "path": "moonbitlang/core/immut/sorted_map",
            "file": "map.mbt",
            "line": 78,
            "column": 8
          }
        },
        {
          "name": "singleton",
          "docstring": "",
          "signature": "fn <a href=\"moonbitlang/core/immut/sorted_map#T\">T</a>::singleton[K, V](key : K, value : V) -> <a href=\"moonbitlang/core/immut/sorted_map#T\">T</a>[K, V]",
          "loc": {
            "path": "moonbitlang/core/immut/sorted_map",
            "file": "deprecated.mbt",
            "line": 35,
            "column": 11
          }
        },
        {
          "name": "size",
          "docstring": "\n Get the number of key-value pairs in the map.",
          "signature": "fn <a href=\"moonbitlang/core/immut/sorted_map#T\">T</a>::size[K, V](self : <a href=\"moonbitlang/core/immut/sorted_map#T\">T</a>[K, V]) -> Int",
          "loc": {
            "path": "moonbitlang/core/immut/sorted_map",
            "file": "utils.mbt",
            "line": 54,
            "column": 8
          }
        },
        {
          "name": "to_array",
          "docstring": "\n Convert to an array of key-value pairs.",
          "signature": "fn <a href=\"moonbitlang/core/immut/sorted_map#T\">T</a>::to_array[K, V](self : <a href=\"moonbitlang/core/immut/sorted_map#T\">T</a>[K, V]) -> <a href=\"moonbitlang/core/array#Array\">Array</a>[(K, V)]",
          "loc": {
            "path": "moonbitlang/core/immut/sorted_map",
            "file": "map.mbt",
            "line": 119,
            "column": 8
          }
        },
        {
          "name": "to_json",
          "docstring": "",
          "signature": "fn <a href=\"moonbitlang/core/immut/sorted_map#T\">T</a>::to_json[K : <a href=\"moonbitlang/core/builtin#Show\">Show</a>, V : <a href=\"moonbitlang/core/builtin#ToJson\">ToJson</a>](self : <a href=\"moonbitlang/core/immut/sorted_map#T\">T</a>[K, V]) -> <a href=\"moonbitlang/core/json#Json\">Json</a>",
          "loc": {
            "path": "moonbitlang/core/immut/sorted_map",
            "file": "utils.mbt",
            "line": 279,
            "column": 8
          }
        }
      ],
      "impls": [
        {
          "self": {
            "kind": "constr",
            "constructor": {
              "name": "T",
              "path": "moonbitlang/core/immut/sorted_map"
            },
            "arguments": [
              { "kind": "param", "name": "K" },
              { "kind": "param", "name": "V" }
            ]
          },
          "trait": { "name": "Compare", "path": "moonbitlang/core/builtin" },
          "methods": [
            {
              "name": "compare",
              "docstring": "",
              "signature": "fn compare[K : <a href=\"moonbitlang/core/builtin#Compare\">Compare</a> + <a href=\"moonbitlang/core/builtin#Eq\">Eq</a>, V : <a href=\"moonbitlang/core/builtin#Compare\">Compare</a> + <a href=\"moonbitlang/core/builtin#Eq\">Eq</a>](self : <a href=\"moonbitlang/core/immut/sorted_map#T\">T</a>[K, V], other : <a href=\"moonbitlang/core/immut/sorted_map#T\">T</a>[K, V]) -> Int",
              "loc": {
                "path": "moonbitlang/core/immut/sorted_map",
                "file": "traits_impl.mbt",
                "line": 35,
                "column": 61
              }
            }
          ]
        },
        {
          "self": {
            "kind": "constr",
            "constructor": {
              "name": "T",
              "path": "moonbitlang/core/immut/sorted_map"
            },
            "arguments": [
              { "kind": "param", "name": "K" },
              { "kind": "param", "name": "V" }
            ]
          },
          "trait": { "name": "Default", "path": "moonbitlang/core/builtin" },
          "methods": [
            {
              "name": "default",
              "docstring": "",
              "signature": "fn default[K, V]() -> <a href=\"moonbitlang/core/immut/sorted_map#T\">T</a>[K, V]",
              "loc": {
                "path": "moonbitlang/core/immut/sorted_map",
                "file": "traits_impl.mbt",
                "line": 16,
                "column": 41
              }
            }
          ]
        },
        {
          "self": {
            "kind": "constr",
            "constructor": {
              "name": "T",
              "path": "moonbitlang/core/immut/sorted_map"
            },
            "arguments": [
              { "kind": "param", "name": "K" },
              { "kind": "param", "name": "V" }
            ]
          },
          "trait": { "name": "Eq", "path": "moonbitlang/core/builtin" },
          "methods": [
            {
              "name": "op_equal",
              "docstring": "",
              "signature": "fn op_equal[K : <a href=\"moonbitlang/core/builtin#Eq\">Eq</a>, V : <a href=\"moonbitlang/core/builtin#Eq\">Eq</a>](self : <a href=\"moonbitlang/core/immut/sorted_map#T\">T</a>[K, V], other : <a href=\"moonbitlang/core/immut/sorted_map#T\">T</a>[K, V]) -> Bool",
              "loc": {
                "path": "moonbitlang/core/immut/sorted_map",
                "file": "traits_impl.mbt",
                "line": 21,
                "column": 46
              }
            }
          ]
        },
        {
          "self": {
            "kind": "constr",
            "constructor": {
              "name": "T",
              "path": "moonbitlang/core/immut/sorted_map"
            },
            "arguments": [
              { "kind": "param", "name": "K" },
              { "kind": "param", "name": "V" }
            ]
          },
          "trait": { "name": "Hash", "path": "moonbitlang/core/builtin" },
          "methods": [
            {
              "name": "hash_combine",
              "docstring": "",
              "signature": "fn hash_combine[K : <a href=\"moonbitlang/core/builtin#Hash\">Hash</a>, V : <a href=\"moonbitlang/core/builtin#Hash\">Hash</a>](self : <a href=\"moonbitlang/core/immut/sorted_map#T\">T</a>[K, V], hasher : <a href=\"moonbitlang/core/builtin#Hasher\">Hasher</a>) -> Unit",
              "loc": {
                "path": "moonbitlang/core/immut/sorted_map",
                "file": "traits_impl.mbt",
                "line": 59,
                "column": 52
              }
            }
          ]
        },
        {
          "self": {
            "kind": "constr",
            "constructor": {
              "name": "T",
              "path": "moonbitlang/core/immut/sorted_map"
            },
            "arguments": [
              { "kind": "param", "name": "K" },
              { "kind": "param", "name": "V" }
            ]
          },
          "trait": { "name": "Show", "path": "moonbitlang/core/builtin" },
          "methods": [
            {
              "name": "output",
              "docstring": "",
              "signature": "fn output[K : <a href=\"moonbitlang/core/builtin#Show\">Show</a>, V : <a href=\"moonbitlang/core/builtin#Show\">Show</a>](self : <a href=\"moonbitlang/core/immut/sorted_map#T\">T</a>[K, V], logger : <a href=\"moonbitlang/core/builtin#Logger\">Logger</a>) -> Unit",
              "loc": {
                "path": "moonbitlang/core/immut/sorted_map",
                "file": "traits_impl.mbt",
                "line": 66,
                "column": 52
              }
            }
          ]
        },
        {
          "self": {
            "kind": "constr",
            "constructor": {
              "name": "T",
              "path": "moonbitlang/core/immut/sorted_map"
            },
            "arguments": [
              { "kind": "param", "name": "K" },
              { "kind": "param", "name": "V" }
            ]
          },
          "trait": { "name": "ToJson", "path": "moonbitlang/core/builtin" },
          "methods": [
            {
              "name": "to_json",
              "docstring": "",
              "signature": "fn to_json[K : <a href=\"moonbitlang/core/builtin#Show\">Show</a>, V : <a href=\"moonbitlang/core/builtin#ToJson\">ToJson</a>](self : <a href=\"moonbitlang/core/immut/sorted_map#T\">T</a>[K, V]) -> <a href=\"moonbitlang/core/json#Json\">Json</a>",
              "loc": {
                "path": "moonbitlang/core/immut/sorted_map",
                "file": "traits_impl.mbt",
                "line": 71,
                "column": 56
              }
            }
          ]
        },
        {
          "self": {
            "kind": "constr",
            "constructor": {
              "name": "T",
              "path": "moonbitlang/core/immut/sorted_map"
            },
            "arguments": [
              { "name": "String", "path": "moonbitlang/core/string" },
              { "kind": "param", "name": "V" }
            ]
          },
          "trait": { "name": "FromJson", "path": "moonbitlang/core/json" },
          "methods": [
            {
              "name": "from_json",
              "docstring": "",
              "signature": "fn from_json[V : <a href=\"moonbitlang/core/json#FromJson\">@moonbitlang/core/json.FromJson</a>](json : <a href=\"moonbitlang/core/json#Json\">Json</a>, path : <a href=\"moonbitlang/core/json#JsonPath\">@moonbitlang/core/json.JsonPath</a>) -> <a href=\"moonbitlang/core/immut/sorted_map#T\">T</a>[String, V]!<a href=\"moonbitlang/core/json#JsonDecodeError\">@moonbitlang/core/json.JsonDecodeError</a>",
              "loc": {
                "path": "moonbitlang/core/immut/sorted_map",
                "file": "traits_impl.mbt",
                "line": 80,
                "column": 67
              }
            }
          ]
        },
        {
          "self": {
            "kind": "constr",
            "constructor": {
              "name": "T",
              "path": "moonbitlang/core/immut/sorted_map"
            },
            "arguments": [
              { "kind": "param", "name": "K" },
              { "kind": "param", "name": "V" }
            ]
          },
          "trait": {
            "name": "Arbitrary",
            "path": "moonbitlang/core/quickcheck"
          },
          "methods": [
            {
              "name": "arbitrary",
              "docstring": "",
              "signature": "fn arbitrary[K : <a href=\"moonbitlang/core/quickcheck#Arbitrary\">@moonbitlang/core/quickcheck.Arbitrary</a> + <a href=\"moonbitlang/core/builtin#Compare\">Compare</a> + <a href=\"moonbitlang/core/builtin#Eq\">Eq</a>, V : <a href=\"moonbitlang/core/quickcheck#Arbitrary\">@moonbitlang/core/quickcheck.Arbitrary</a>](size : Int, rs : <a href=\"moonbitlang/core/quickcheck/splitmix#RandomState\">@moonbitlang/core/quickcheck/splitmix.RandomState</a>) -> <a href=\"moonbitlang/core/immut/sorted_map#T\">T</a>[K, V]",
              "loc": {
                "path": "moonbitlang/core/immut/sorted_map",
                "file": "traits_impl.mbt",
                "line": 54,
                "column": 8
              }
            }
          ]
        }
      ]
    }
  ],
  "typealias": [],
  "values": [
    {
      "name": "add",
      "docstring": "\n Create a new map with a key-value pair inserted.\n O(log n).\n",
      "signature": "fn add[K : <a href=\"moonbitlang/core/builtin#Compare\">Compare</a> + <a href=\"moonbitlang/core/builtin#Eq\">Eq</a>, V](self : <a href=\"moonbitlang/core/immut/sorted_map#T\">T</a>[K, V], key : K, value : V) -> <a href=\"moonbitlang/core/immut/sorted_map#T\">T</a>[K, V]",
      "loc": {
        "path": "moonbitlang/core/immut/sorted_map",
        "file": "map.mbt",
        "line": 19,
        "column": 8
      }
    },
    {
      "name": "contains",
      "docstring": "\n Check if the map contains a key.\n O(log n).",
      "signature": "fn contains[K : <a href=\"moonbitlang/core/builtin#Compare\">Compare</a> + <a href=\"moonbitlang/core/builtin#Eq\">Eq</a>, V](self : <a href=\"moonbitlang/core/immut/sorted_map#T\">T</a>[K, V], key : K) -> Bool",
      "loc": {
        "path": "moonbitlang/core/immut/sorted_map",
        "file": "utils.mbt",
        "line": 36,
        "column": 8
      }
    },
    {
      "name": "each",
      "docstring": "\n Iterate over the key-value pairs in the map.",
      "signature": "fn each[K, V](self : <a href=\"moonbitlang/core/immut/sorted_map#T\">T</a>[K, V], f : (K, V) -> Unit) -> Unit",
      "loc": {
        "path": "moonbitlang/core/immut/sorted_map",
        "file": "utils.mbt",
        "line": 98,
        "column": 8
      }
    },
    {
      "name": "eachi",
      "docstring": "\n Iterate over the key-value pairs with index.",
      "signature": "fn eachi[K, V](self : <a href=\"moonbitlang/core/immut/sorted_map#T\">T</a>[K, V], f : (Int, K, V) -> Unit) -> Unit",
      "loc": {
        "path": "moonbitlang/core/immut/sorted_map",
        "file": "utils.mbt",
        "line": 111,
        "column": 8
      }
    },
    {
      "name": "elems",
      "docstring": "\n Return all elements of the map in the ascending order of their keys.",
      "signature": "fn elems[K, V](self : <a href=\"moonbitlang/core/immut/sorted_map#T\">T</a>[K, V]) -> <a href=\"moonbitlang/core/array#Array\">Array</a>[V]",
      "loc": {
        "path": "moonbitlang/core/immut/sorted_map",
        "file": "utils.mbt",
        "line": 264,
        "column": 8
      }
    },
    {
      "name": "filter",
      "docstring": "\n Filter values that satisfy the predicate",
      "signature": "fn filter[K : <a href=\"moonbitlang/core/builtin#Compare\">Compare</a> + <a href=\"moonbitlang/core/builtin#Eq\">Eq</a>, V](self : <a href=\"moonbitlang/core/immut/sorted_map#T\">T</a>[K, V], pred : (V) -> Bool) -> <a href=\"moonbitlang/core/immut/sorted_map#T\">T</a>[K, V]",
      "loc": {
        "path": "moonbitlang/core/immut/sorted_map",
        "file": "map.mbt",
        "line": 96,
        "column": 8
      }
    },
    {
      "name": "filter_with_key",
      "docstring": "\n Filter key-value pairs that satisfy the predicate",
      "signature": "fn filter_with_key[K : <a href=\"moonbitlang/core/builtin#Compare\">Compare</a> + <a href=\"moonbitlang/core/builtin#Eq\">Eq</a>, V](self : <a href=\"moonbitlang/core/immut/sorted_map#T\">T</a>[K, V], pred : (K, V) -> Bool) -> <a href=\"moonbitlang/core/immut/sorted_map#T\">T</a>[K, V]",
      "loc": {
        "path": "moonbitlang/core/immut/sorted_map",
        "file": "map.mbt",
        "line": 102,
        "column": 8
      }
    },
    {
      "name": "fold",
      "docstring": "\n Fold the values in the map.\n O(n).",
      "signature": "fn fold[K, V, A](self : <a href=\"moonbitlang/core/immut/sorted_map#T\">T</a>[K, V], init~ : A, f : (A, V) -> A) -> A",
      "loc": {
        "path": "moonbitlang/core/immut/sorted_map",
        "file": "utils.mbt",
        "line": 149,
        "column": 8
      }
    },
    {
      "name": "foldl_with_key",
      "docstring": "\n Pre-order fold.\n O(n).",
      "signature": "fn foldl_with_key[K, V, A](self : <a href=\"moonbitlang/core/immut/sorted_map#T\">T</a>[K, V], f : (A, K, V) -> A, init~ : A) -> A",
      "loc": {
        "path": "moonbitlang/core/immut/sorted_map",
        "file": "utils.mbt",
        "line": 174,
        "column": 8
      }
    },
    {
      "name": "foldr_with_key",
      "docstring": "\n Post-order fold.\n O(n).",
      "signature": "fn foldr_with_key[K, V, A](self : <a href=\"moonbitlang/core/immut/sorted_map#T\">T</a>[K, V], f : (A, K, V) -> A, init~ : A) -> A",
      "loc": {
        "path": "moonbitlang/core/immut/sorted_map",
        "file": "utils.mbt",
        "line": 156,
        "column": 8
      }
    },
    {
      "name": "from_array",
      "docstring": "\n Build a map from an array of key-value pairs.\n O(n*log n).",
      "signature": "fn from_array[K : <a href=\"moonbitlang/core/builtin#Compare\">Compare</a> + <a href=\"moonbitlang/core/builtin#Eq\">Eq</a>, V](array : <a href=\"moonbitlang/core/array#Array\">Array</a>[(K, V)]) -> <a href=\"moonbitlang/core/immut/sorted_map#T\">T</a>[K, V]",
      "loc": {
        "path": "moonbitlang/core/immut/sorted_map",
        "file": "utils.mbt",
        "line": 204,
        "column": 8
      }
    },
    {
      "name": "from_iter",
      "docstring": "",
      "signature": "fn from_iter[K : <a href=\"moonbitlang/core/builtin#Compare\">Compare</a> + <a href=\"moonbitlang/core/builtin#Eq\">Eq</a>, V](iter : <a href=\"moonbitlang/core/builtin#Iter\">Iter</a>[(K, V)]) -> <a href=\"moonbitlang/core/immut/sorted_map#T\">T</a>[K, V]",
      "loc": {
        "path": "moonbitlang/core/immut/sorted_map",
        "file": "utils.mbt",
        "line": 252,
        "column": 8
      }
    },
    {
      "name": "from_json",
      "docstring": "",
      "signature": "fn from_json[V : <a href=\"moonbitlang/core/json#FromJson\">@moonbitlang/core/json.FromJson</a>](json : <a href=\"moonbitlang/core/json#Json\">Json</a>) -> <a href=\"moonbitlang/core/immut/sorted_map#T\">T</a>[String, V]!<a href=\"moonbitlang/core/json#JsonDecodeError\">@moonbitlang/core/json.JsonDecodeError</a>",
      "loc": {
        "path": "moonbitlang/core/immut/sorted_map",
        "file": "utils.mbt",
        "line": 284,
        "column": 8
      }
    },
    {
      "name": "insert",
      "docstring": "\n Create a new map with a key-value pair inserted.\n O(log n).\n",
      "signature": "fn insert[K : <a href=\"moonbitlang/core/builtin#Compare\">Compare</a> + <a href=\"moonbitlang/core/builtin#Eq\">Eq</a>, V](self : <a href=\"moonbitlang/core/immut/sorted_map#T\">T</a>[K, V], key : K, value : V) -> <a href=\"moonbitlang/core/immut/sorted_map#T\">T</a>[K, V]",
      "loc": {
        "path": "moonbitlang/core/immut/sorted_map",
        "file": "deprecated.mbt",
        "line": 21,
        "column": 8
      }
    },
    {
      "name": "is_empty",
      "docstring": "",
      "signature": "fn is_empty[K, V](self : <a href=\"moonbitlang/core/immut/sorted_map#T\">T</a>[K, V]) -> Bool",
      "loc": {
        "path": "moonbitlang/core/immut/sorted_map",
        "file": "utils.mbt",
        "line": 62,
        "column": 8
      }
    },
    {
      "name": "iter",
      "docstring": "",
      "signature": "fn iter[K, V](self : <a href=\"moonbitlang/core/immut/sorted_map#T\">T</a>[K, V]) -> <a href=\"moonbitlang/core/builtin#Iter\">Iter</a>[(K, V)]",
      "loc": {
        "path": "moonbitlang/core/immut/sorted_map",
        "file": "utils.mbt",
        "line": 214,
        "column": 8
      }
    },
    {
      "name": "iter2",
      "docstring": "",
      "signature": "fn iter2[K, V](self : <a href=\"moonbitlang/core/immut/sorted_map#T\">T</a>[K, V]) -> <a href=\"moonbitlang/core/builtin#Iter2\">Iter2</a>[K, V]",
      "loc": {
        "path": "moonbitlang/core/immut/sorted_map",
        "file": "utils.mbt",
        "line": 233,
        "column": 8
      }
    },
    {
      "name": "keys",
      "docstring": "\n Return all keys of the map in ascending order.",
      "signature": "fn keys[K, V](self : <a href=\"moonbitlang/core/immut/sorted_map#T\">T</a>[K, V]) -> <a href=\"moonbitlang/core/array#Array\">Array</a>[K]",
      "loc": {
        "path": "moonbitlang/core/immut/sorted_map",
        "file": "utils.mbt",
        "line": 258,
        "column": 8
      }
    },
    {
      "name": "lookup",
      "docstring": "\n Get the value associated with a key.\n O(log n).",
      "signature": "fn lookup[K : <a href=\"moonbitlang/core/builtin#Compare\">Compare</a> + <a href=\"moonbitlang/core/builtin#Eq\">Eq</a>, V](self : <a href=\"moonbitlang/core/immut/sorted_map#T\">T</a>[K, V], key : K) -> V?",
      "loc": {
        "path": "moonbitlang/core/immut/sorted_map",
        "file": "utils.mbt",
        "line": 75,
        "column": 8
      }
    },
    {
      "name": "map",
      "docstring": "\n Ts over the values in the map.",
      "signature": "fn map[K, X, Y](self : <a href=\"moonbitlang/core/immut/sorted_map#T\">T</a>[K, X], f : (X) -> Y) -> <a href=\"moonbitlang/core/immut/sorted_map#T\">T</a>[K, Y]",
      "loc": {
        "path": "moonbitlang/core/immut/sorted_map",
        "file": "utils.mbt",
        "line": 128,
        "column": 8
      }
    },
    {
      "name": "map_with_key",
      "docstring": "\n Maps over the key-value pairs in the map.",
      "signature": "fn map_with_key[K, X, Y](self : <a href=\"moonbitlang/core/immut/sorted_map#T\">T</a>[K, X], f : (K, X) -> Y) -> <a href=\"moonbitlang/core/immut/sorted_map#T\">T</a>[K, Y]",
      "loc": {
        "path": "moonbitlang/core/immut/sorted_map",
        "file": "utils.mbt",
        "line": 138,
        "column": 8
      }
    },
    {
      "name": "new",
      "docstring": " Create an empty map.",
      "signature": "fn new[K, V]() -> <a href=\"moonbitlang/core/immut/sorted_map#T\">T</a>[K, V]",
      "loc": {
        "path": "moonbitlang/core/immut/sorted_map",
        "file": "utils.mbt",
        "line": 23,
        "column": 8
      }
    },
    {
      "name": "of",
      "docstring": "",
      "signature": "fn of[K : <a href=\"moonbitlang/core/builtin#Compare\">Compare</a> + <a href=\"moonbitlang/core/builtin#Eq\">Eq</a>, V](array : <a href=\"moonbitlang/core/array#FixedArray\">FixedArray</a>[(K, V)]) -> <a href=\"moonbitlang/core/immut/sorted_map#T\">T</a>[K, V]",
      "loc": {
        "path": "moonbitlang/core/immut/sorted_map",
        "file": "utils.mbt",
        "line": 269,
        "column": 8
      }
    },
    {
      "name": "op_get",
      "docstring": "",
      "signature": "fn op_get[K : <a href=\"moonbitlang/core/builtin#Compare\">Compare</a> + <a href=\"moonbitlang/core/builtin#Eq\">Eq</a>, V](self : <a href=\"moonbitlang/core/immut/sorted_map#T\">T</a>[K, V], key : K) -> V?",
      "loc": {
        "path": "moonbitlang/core/immut/sorted_map",
        "file": "utils.mbt",
        "line": 92,
        "column": 8
      }
    },
    {
      "name": "remove",
      "docstring": "\n Create a new map with a key-value pair removed. O(log n).\n If the key is not a member or map, the original map is returned.",
      "signature": "fn remove[K : <a href=\"moonbitlang/core/builtin#Compare\">Compare</a> + <a href=\"moonbitlang/core/builtin#Eq\">Eq</a>, V](self : <a href=\"moonbitlang/core/immut/sorted_map#T\">T</a>[K, V], key : K) -> <a href=\"moonbitlang/core/immut/sorted_map#T\">T</a>[K, V]",
      "loc": {
        "path": "moonbitlang/core/immut/sorted_map",
        "file": "map.mbt",
        "line": 78,
        "column": 8
      }
    },
    {
      "name": "singleton",
      "docstring": "\n Create a map with a single key-value pair.",
      "signature": "fn singleton[K, V](key : K, value : V) -> <a href=\"moonbitlang/core/immut/sorted_map#T\">T</a>[K, V]",
      "loc": {
        "path": "moonbitlang/core/immut/sorted_map",
        "file": "utils.mbt",
        "line": 29,
        "column": 8
      }
    },
    {
      "name": "size",
      "docstring": "\n Get the number of key-value pairs in the map.",
      "signature": "fn size[K, V](self : <a href=\"moonbitlang/core/immut/sorted_map#T\">T</a>[K, V]) -> Int",
      "loc": {
        "path": "moonbitlang/core/immut/sorted_map",
        "file": "utils.mbt",
        "line": 54,
        "column": 8
      }
    },
    {
      "name": "to_array",
      "docstring": "\n Convert to an array of key-value pairs.",
      "signature": "fn to_array[K, V](self : <a href=\"moonbitlang/core/immut/sorted_map#T\">T</a>[K, V]) -> <a href=\"moonbitlang/core/array#Array\">Array</a>[(K, V)]",
      "loc": {
        "path": "moonbitlang/core/immut/sorted_map",
        "file": "map.mbt",
        "line": 119,
        "column": 8
      }
    },
    {
      "name": "to_json",
      "docstring": "",
      "signature": "fn to_json[K : <a href=\"moonbitlang/core/builtin#Show\">Show</a>, V : <a href=\"moonbitlang/core/builtin#ToJson\">ToJson</a>](self : <a href=\"moonbitlang/core/immut/sorted_map#T\">T</a>[K, V]) -> <a href=\"moonbitlang/core/json#Json\">Json</a>",
      "loc": {
        "path": "moonbitlang/core/immut/sorted_map",
        "file": "utils.mbt",
        "line": 279,
        "column": 8
      }
    }
  ],
  "misc": []
}