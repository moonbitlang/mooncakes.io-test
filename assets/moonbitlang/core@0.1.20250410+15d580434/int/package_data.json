{
  "name": "moonbitlang/core/int",
  "traits": [],
  "types": [],
  "typealias": [],
  "values": [
    {
      "name": "abs",
      "docstring": "\n Computes the absolute value of an integer.\n\n Parameters:\n\n * `self` : The integer whose absolute value is to be computed.\n\n Returns the absolute value of the integer.\n\n Example:\n\n ```moonbit\n test \"abs\" {\n   inspect!(@int.abs(42), content=\"42\")\n   inspect!(@int.abs(-42), content=\"42\")\n   inspect!(@int.abs(0), content=\"0\")\n }\n ```",
      "signature": "fn abs(self : Int) -> Int",
      "loc": {
        "path": "moonbitlang/core/int",
        "file": "int.mbt",
        "line": 41,
        "column": 8
      }
    },
    {
      "name": "max_value",
      "docstring": "\n Maximum value of an integer.",
      "signature": "let max_value : Int",
      "loc": {
        "path": "moonbitlang/core/int",
        "file": "int.mbt",
        "line": 17,
        "column": 9
      }
    },
    {
      "name": "min_value",
      "docstring": "\n Minimum value of an integer.",
      "signature": "let min_value : Int",
      "loc": {
        "path": "moonbitlang/core/int",
        "file": "int.mbt",
        "line": 21,
        "column": 9
      }
    },
    {
      "name": "to_be_bytes",
      "docstring": " Converts the Int to a Bytes in big-endian byte order.",
      "signature": "fn to_be_bytes(self : Int) -> Bytes",
      "loc": {
        "path": "moonbitlang/core/int",
        "file": "int.mbt",
        "line": 50,
        "column": 8
      }
    },
    {
      "name": "to_le_bytes",
      "docstring": " Converts the Int to a Bytes in little-endian byte order.",
      "signature": "fn to_le_bytes(self : Int) -> Bytes",
      "loc": {
        "path": "moonbitlang/core/int",
        "file": "int.mbt",
        "line": 55,
        "column": 8
      }
    }
  ],
  "misc": [
    {
      "name": "Int",
      "impls": [],
      "methods": [
        {
          "name": "abs",
          "docstring": "\n Computes the absolute value of an integer.\n\n Parameters:\n\n * `self` : The integer whose absolute value is to be computed.\n\n Returns the absolute value of the integer.\n\n Example:\n\n ```moonbit\n test \"abs\" {\n   inspect!(@int.abs(42), content=\"42\")\n   inspect!(@int.abs(-42), content=\"42\")\n   inspect!(@int.abs(0), content=\"0\")\n }\n ```",
          "signature": "fn <a href=\"moonbitlang/core/int#Int\">Int</a>::abs(self : Int) -> Int",
          "loc": {
            "path": "moonbitlang/core/int",
            "file": "int.mbt",
            "line": 41,
            "column": 8
          }
        },
        {
          "name": "to_be_bytes",
          "docstring": " Converts the Int to a Bytes in big-endian byte order.",
          "signature": "fn <a href=\"moonbitlang/core/int#Int\">Int</a>::to_be_bytes(self : Int) -> Bytes",
          "loc": {
            "path": "moonbitlang/core/int",
            "file": "int.mbt",
            "line": 50,
            "column": 8
          }
        },
        {
          "name": "to_le_bytes",
          "docstring": " Converts the Int to a Bytes in little-endian byte order.",
          "signature": "fn <a href=\"moonbitlang/core/int#Int\">Int</a>::to_le_bytes(self : Int) -> Bytes",
          "loc": {
            "path": "moonbitlang/core/int",
            "file": "int.mbt",
            "line": 55,
            "column": 8
          }
        }
      ]
    }
  ]
}