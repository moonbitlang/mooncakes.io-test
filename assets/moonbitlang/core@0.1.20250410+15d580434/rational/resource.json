{
  "kind": "package",
  "relative_path": "rational",
  "module_path": "moonbitlang/core",
  "readme_content": "---\nmoonbit : true\n---\n\n# Rational\n\nThe `Rational` type represents a rational number, which is a number that can be expressed as a fraction `a/b` where `a` and `b` are integers and `b` is not zero.\n\n# Usage\n\n## Arithmetic Operations\n\nThe `Rational` type supports the following arithmetic operations:\n\n```moonbit\nlet a = @rational.new(1L, 2L).unwrap()\nlet b = @rational.new(1L, 3L).unwrap()\nassert_eq!(a + b, @rational.new(5L, 6L).unwrap())\nassert_eq!(a - b, @rational.new(1L, 6L).unwrap())\nassert_eq!(a * b, @rational.new(1L, 6L).unwrap())\nassert_eq!(a / b, @rational.new(3L, 2L).unwrap())\nassert_eq!(a.neg(), @rational.new(-1L, 2L).unwrap())\nassert_eq!(a.reciprocal(), @rational.new(2L, 1L).unwrap())\nassert_eq!(a.abs(), @rational.new(1L, 2L).unwrap())\n```\n\n## Comparison Operations\n\nThe `Rational` type supports the following comparison operations:\n\n```moonbit\nlet a = @rational.new(1L, 2L).unwrap()\nlet b = @rational.new(1L, 3L).unwrap()\nassert_eq!(a == b, false)\nassert_eq!(a != b, true)\nassert_eq!(a < b, false)\nassert_eq!(a <= b, false)\nassert_eq!(a > b, true)\nassert_eq!(a >= b, true)\nassert_eq!(a.compare(b), 1)\n```\n\n## Integer Operations\n\nThe `Rational` type supports the following integer operations:\n\n```moonbit\nlet a = @rational.new(1L, 2L).unwrap()\nassert_eq!(a.floor(), 0)\nassert_eq!(a.ceil(), 1)\nassert_eq!(a.fract().to_string(), \"1/2\")\nassert_eq!(a.trunc(), 0)\nassert_eq!(a.is_integer(), false)\n```\n\n## Double Operations\n\nThe `Rational` type supports the following double operations:\n\n```moonbit\nlet a = @rational.new(1L, 2L).unwrap()\nassert_eq!(a.to_double(), 0.5)\nassert_eq!(@rational.from_double!(0.5).to_string(), \"1/2\")\n```\n\n## String Operations\n\nThe `Rational` type supports the following string operations:\n\n```moonbit\nlet a = @rational.new(1L, 2L).unwrap()\nassert_eq!(a.to_string(), \"1/2\")\n```",
  "package_data": "moonbitlang/core/rational/package_data.json",
  "source_files": [ "deprecated.mbt", "rational.mbt" ]
}