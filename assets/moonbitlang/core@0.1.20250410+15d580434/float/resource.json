{
  "kind": "package",
  "relative_path": "float",
  "module_path": "moonbitlang/core",
  "readme_content": "# MoonBit Float Package Documentation\n\nThis package provides operations on 32-bit floating-point numbers (`Float`). It includes basic arithmetic, trigonometric functions, exponential and logarithmic functions, as well as utility functions for rounding and conversion.\n\n## Special Values\n\nThe package defines several special floating-point values:\n\n```moonbit\ntest \"special float values\" {\n  // Infinity values\n  inspect!(@float.infinity, content=\"Infinity\")\n  inspect!(@float.neg_infinity, content=\"-Infinity\")\n\n  // Not a Number\n  inspect!(@float.not_a_number, content=\"NaN\")\n\n  // Bounds\n  inspect!(@float.max_value, content=\"3.4028234663852886e+38\")\n  inspect!(@float.min_value, content=\"-3.4028234663852886e+38\")\n  inspect!(@float.min_positive, content=\"1.1754943508222875e-38\")\n}\n\ntest \"checking special values\" {\n  // Testing for special values\n  inspect!(@float.is_inf(@float.infinity), content=\"true\")\n  inspect!(@float.is_neg_inf(@float.neg_infinity), content=\"true\")\n  inspect!(@float.is_pos_inf(@float.infinity), content=\"true\")\n  inspect!(@float.is_nan(@float.not_a_number), content=\"true\")\n}\n```\n\n## Rounding Functions\n\nThe package provides various ways to round floating-point numbers:\n\n```moonbit\ntest \"rounding functions\" {\n  // Ceiling - rounds up\n  inspect!(@float.ceil(3.2), content=\"4\")\n  inspect!(@float.ceil(-3.2), content=\"-3\")\n\n  // Floor - rounds down\n  inspect!(@float.floor(3.2), content=\"3\")\n  inspect!(@float.floor(-3.2), content=\"-4\")\n\n  // Round - rounds to nearest integer\n  inspect!(@float.round(3.7), content=\"4\")\n  inspect!(@float.round(3.2), content=\"3\")\n\n  // Truncate - removes decimal part\n  inspect!(@float.trunc(3.7), content=\"3\")\n  inspect!(@float.trunc(-3.7), content=\"-3\")\n}\n```\n\n## Trigonometric Functions\n\nThe package includes a complete set of trigonometric functions:\n\n```moonbit\ntest \"trigonometric functions\" {\n  // Basic trigonometric functions\n  inspect!(@float.sin(0.0), content=\"0\")\n  inspect!(@float.cos(0.0), content=\"1\")\n  inspect!(@float.tan(0.0), content=\"0\")\n\n  // Inverse trigonometric functions\n  let y = @float.sin(0.5)\n  inspect!(@float.asin(y), content=\"0.5\")\n\n  // Hyperbolic functions\n  inspect!(@float.sinh(0.0), content=\"0\")\n  inspect!(@float.cosh(0.0), content=\"1\")\n  inspect!(@float.tanh(0.0), content=\"0\")\n\n  // Inverse hyperbolic functions\n  inspect!(@float.asinh(0.0), content=\"0\")\n  inspect!(@float.acosh(1.0), content=\"0\")\n  inspect!(@float.atanh(0.0), content=\"0\")\n}\n```\n\n## Exponential and Logarithmic Functions\n\nFunctions for exponential and logarithmic calculations:\n\n```moonbit\ntest \"exp and log functions\" {\n  // Exponential\n  inspect!(@float.exp(0.0), content=\"1\")\n  inspect!(@float.expm1(0.0), content=\"0\") // exp(x) - 1\n\n  // Natural logarithm\n  inspect!(@float.ln(1.0), content=\"0\")\n  inspect!(@float.ln_1p(0.0), content=\"0\") // ln(1 + x)\n\n  // Power functions\n  inspect!(@float.pow(2.0, 3.0), content=\"8\")\n  inspect!(@float.cbrt(8.0), content=\"2\") // cube root\n}\n```\n\n## Utility Functions\n\nOther useful operations on floats:\n\n```moonbit\ntest \"utility functions\" {\n  // Absolute value\n  inspect!(@float.abs(-3.14), content=\"3.140000104904175\")\n\n  // Hypotenuse calculation\n  inspect!(@float.hypot(3.0, 4.0), content=\"5\")\n\n  // Conversion to integer\n  inspect!(@float.to_int(3.14), content=\"3\")\n\n  // Default value\n  inspect!(@float.default(), content=\"0\")\n}\n```\n\n## Byte Representation\n\nFunctions to convert floats to their byte representation:\n\n```moonbit\ntest \"byte representation\" {\n  let x : Float = 3.14\n  // Big-endian bytes\n  let be_bytes = x.to_be_bytes()\n  // Little-endian bytes\n  let le_bytes = x.to_le_bytes()\n  inspect!(be_bytes.length(), content=\"4\")\n  inspect!(le_bytes.length(), content=\"4\")\n}\n```\n\n## Method Style\n\nAll functions can also be called in method style:\n\n```moonbit\ntest \"method style calls\" {\n  let x : Float = 3.14\n  inspect!(x.floor(), content=\"3\")\n  inspect!(x.ceil(), content=\"4\")\n  inspect!(x.round(), content=\"3\")\n  let y : Float = 2.0\n  inspect!(y.pow(3.0), content=\"8\")\n}\n```\n",
  "package_data": "moonbitlang/core/float/package_data.json",
  "source_files": [
    "to_int_wasm.mbt", "cbrt.mbt", "round.mbt", "float.mbt", "round_js.mbt",
    "log.mbt", "hyperbolic.mbt", "round_wasm.mbt", "hypot.mbt", "trig.mbt",
    "exp.mbt", "pow.mbt", "to_int.mbt", "mod.mbt"
  ]
}