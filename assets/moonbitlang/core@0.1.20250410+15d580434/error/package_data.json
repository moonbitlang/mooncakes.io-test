{
  "name": "moonbitlang/core/error",
  "traits": [],
  "types": [],
  "typealias": [],
  "values": [],
  "misc": [
    {
      "name": "Error",
      "impls": [
        {
          "self": {
            "kind": "constr",
            "constructor": {
              "name": "Error",
              "path": "moonbitlang/core/error"
            },
            "arguments": []
          },
          "trait": { "name": "Show", "path": "moonbitlang/core/builtin" },
          "methods": [
            {
              "name": "output",
              "docstring": "\n Implements `Show` trait for `Error` type by converting the error into a\n string representation.\n\n Parameters:\n\n * `self`: The error value to be converted.\n * `logger`: A buffer that accumulates the string representation.\n\n Example:\n\n ```moonbit\n test \"Error::Show/output\" {\n   let error : Error = Failure(\"test error\")\n   inspect!(error, content=\"\\\"Failure(test error)\\\"\")\n }\n ```",
              "signature": "fn output(self : <a href=\"moonbitlang/core/error#Error\">Error</a>, logger : <a href=\"moonbitlang/core/builtin#Logger\">Logger</a>) -> Unit",
              "loc": {
                "path": "moonbitlang/core/error",
                "file": "error.mbt",
                "line": 35,
                "column": 30
              }
            }
          ]
        }
      ],
      "methods": []
    }
  ]
}