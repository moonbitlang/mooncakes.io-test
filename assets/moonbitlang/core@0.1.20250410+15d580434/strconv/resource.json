{
  "kind": "package",
  "relative_path": "strconv",
  "module_path": "moonbitlang/core",
  "readme_content": "---\nmoonbit : true\n---\n\n# Strconv\n\nThis package implements conversions to and from string representations of basic data types.\n\n# Usage\n\n## Parse\n\nUse `parse_bool`, `parse_double`, `parse_int`, and `parse_int64` convert strings to values.\n\n```moonbit\ntest {\n  let b = @strconv.parse_bool!(\"true\")\n  assert_eq!(b, true)\n  let i1 = @strconv.parse_int!(\"1234567\")\n  assert_eq!(i1, 1234567)\n  let i2 = @strconv.parse_int!(\"101\", base=2)\n  assert_eq!(i2, 5)\n  let d = @strconv.parse_double!(\"123.4567\")\n  assert_eq!(d, 123.4567)\n}\n```\n\nFor types that implement the `FromStr` trait, you can also use helper function `parse` to convert a string to a value.\n\n```moonbit\ntest {\n  let a : Int = @strconv.parse!(\"123\")\n  assert_eq!(a, 123)\n  let b : Bool = @strconv.parse!(\"true\")\n  assert_eq!(b, true)\n}\n```\n",
  "package_data": "moonbitlang/core/strconv/package_data.json",
  "source_files": [
    "uint.mbt", "traits.mbt", "bool.mbt", "double.mbt", "number.mbt",
    "string_slice.mbt", "errors.mbt", "decimal.mbt", "int.mbt"
  ]
}