{
  "kind": "module",
  "meta_info": {
    "name": "smallbearrr/pandas",
    "version": "0.6.4",
    "readme": "README.md",
    "repository": "https://github.com/moonbit-community/pandas",
    "license": "Apache-2.0",
    "keywords": [
      "pandas", "polars", "dataframe", "data cleaning", "data manipulation"
    ],
    "description": "Provide efficient data manipulation and analysis",
    "source": "src"
  },
  "readme_content": "# Pandas In Moonbit\nmooncakes.io link: https://mooncakes.io/docs/#/smallbearrr/pandas/ <br>\nmoonbit-community link: https://github.com/moonbit-community/pandas\n\n## Introduction\nThis is a data processing library written in Moonbit. It provides a DataFrame data structure for efficient data manipulation and analysis.\n\n\n## Usage\n\n### DataFrame\ncreate a DataFrame\n```moonbit\nlet col1 = Series::new(\"A\", SeriesInput::Int32([1, 2, 3]))\nlet col2 = Series::new(\"B\", SeriesInput::Float32([1.5, 2.5, 3.5]))\nlet col3 = Series::new(\"C\", SeriesInput::Int32_Nullable([Some(1), None, Some(3)]))\nlet df = DataFrame::new([col1, col2, col3])\n```\n\nDisplay the first few(min(size, 5)) rows of the DataFrame\n```moonbit\ndf.head()\n```\n\nDataFrame already traits the `Show`, it can print the DataFrame directly:\n```moonbit\nprintln(df)\n```\n\nAdd a new column\n```moonbit\nlet new_col = Series::new(\"C\", SeriesInput::Bool([true, false, true]))\ndf.add_column!(new_col)\n```\n\nDrop a column\n```moonbit\ndf.drop_column!(\"C\")\n```\n\nRename a column\n```moonbit\ndf.rename!(\"A\", \"A1\")\n```\n\nSelect a column\n```moonbit\nlet df_col = df.column(\"A\")\n```\n\nSelect specific columns\n```moonbit\nlet df_cols = df.select_columns!([\"A1\", \"B\"])\n```\n\nDrop a row\n```moonbit\ndf.drop_row!(0)\n```\n\nAdd a new row\n```moonbit\ndf.add_row!([SeriesValue::Int32(7), SeriesValue::Float32(7.5), SeriesValue::Bool(true), SeriesValue::Str(\"ok\")])\n```\n\nSelect rows by range or by specific indices:\n```moonbit\nlet row_selected_range = df.select_rows!(range=(1, 3))\nlet row_selected_indices = df.select_rows!(indices=[1, 3, 5])\n```\n\nFilter rows based on a condition applied to a specific column:\n```moonbit\nlet filtered = df.filter!(\"A\", fn(x) -> Bool { x < DType::Int(3) })\n```\n\nSort the DataFrame by a specified column in ascending or descending order:\n```moonbit\ndf.sort!(\"A\")\ndf.sort!(\"B\", descending=true)\n```\n\nVertically stack two DataFrame\n```moonbit\nlet new_df = df1.vstack!(df2)\n```\n\nHorizontally stack two DataFra\n```moonbit\nlet new_df = df1.hstack!(df2)\n```\n\n### Series\nCreate a Series\n```moonbit\nlet series_int = Series::new(\"IntColumn\", SeriesInput::Int32([1, 2, 3]))\nlet series_float = Series::new(\"FloatColumn\", SeriesInput::Float32([1.1, 2.2, 3.3]))\nlet series_bool = Series::new(\"BoolColumn\", SeriesInput::Bool([true, false, true]))\nlet series_str = Series::new(\"StrColumn\", SeriesInput::Str([\"a\", \"b\", \"c\"]))\n```\n\nErase element\n```moonbit\nseries.erase(1)\n```\n\nSort the SeriesData in Series and return the indices of the sorted elements\n```moonbit\nlet indices = series.sort()\n```\n\nAdd two Series\n```moonbit\nlet series1 = Series::new(\"A\", SeriesInput::Int32([1, 2, 3]))\nlet series2 = Series::new(\"B\", SeriesInput::Float32([1.5, 2.0, 3.5]))\nlet add = series1 + series2\n```\n\nOperation of add, subtract, multiply and divide\n```moonbit\nlet add_op = series1 + series2\nlet sub_op = series1 - series2\nlet mul_op = series1 * series2\nlet div_op = series1 / series2\n```\n\n## Feature\n\n### DataFrame Methods\n\n| Method             | Description                                                                 |\n|--------------------|-----------------------------------------------------------------------------|\n| `new`              | Create a new DataFrame                                                      |\n| `shape`            | Get the shape of the DataFrame                                              |\n| `data`             | Get the data of the DataFrame                                               |\n| `head`             | Display the first few rows of the DataFrame                                 |\n| `add_column`       | Add a new column to the DataFrame                                           |\n| `drop_column`      | Drop a column from the DataFrame                                            |\n| `rename`           | Rename a column in the DataFrame                                            |\n| `column`           | Select a column from the DataFrame                                          |\n| `select_columns`   | Select specific columns from the DataFrame                                  |\n| `drop_row`         | Drop a row from the DataFrame                                               |\n| `add_row`          | Add a new row to the DataFrame                                              |\n| `select_rows`      | Select specific rows from the DataFrame                                     |\n| `filter`           | Filter rows in the DataFrame based on a condition                           |\n| `sort`             | Sort the DataFrame by a specified column                                    |\n| `vstack`           | Vertically stack two DataFrames                                             |\n| `hstack`           | Horizontally stack two DataFrames                                           |\n| `clear`            | Clear all data in the DataFrame                                             |\n| `clone`            | Create a deep copy of the DataFrame                                         |\n| `item`             | Retrieve a single item from the DataFrame                                   |\n| `limit`            | Create a new DataFrame containing only the first N rows                     |\n| `tail`             | Create a new DataFrame containing only the last N rows                      |\n| `slice`            | Create a new DataFrame containing a slice of rows                           |\n| `to_series`        | Convert a column of the DataFrame to a Series                               |\n| `unique`           | Remove duplicate rows from the DataFrame                                    |\n| `replace_column`   | Replace a column in the DataFrame                                           |\n| `reverse`          | Reverse the order of rows in the DataFrame                                  |\n| `get_column_index` | Get the index of a column by its name                                       |\n| `with_row_index`   | Add a row index column to the DataFrame                                     |\n| `transpose`        | Transpose the DataFrame over the diagonal                                   |\n| `mean`             | Calculate the mean of each column in the DataFrame                          |\n| `var`              | Calculate the variance of each column in the DataFrame                      |\n| `count`            | Count the number of rows and columns in the DataFrame                       |\n| `max`              | Get the maximum value of each column in the DataFrame                       |\n| `max_horizontal`   | Get the maximum value of each row in the DataFrame                          |\n| `min`              | Get the minimum value of each column in the DataFrame                       |\n| `min_horizontal`   | Get the minimum value of each row in the DataFrame                          |\n| `sum`              | Calculate the sum of each column in the DataFrame                           |\n| `sum_horizontal`   | Calculate the sum of each row in the DataFrame                              |\n| `dtypes`           | Get the data types of each column in the DataFrame                          |\n| `height`           | Get the number of rows in the DataFrame                                     |\n| `width`            | Get the number of columns in the DataFrame                                  |\n| `product`          | Calculate the product of each column in the DataFrame                       |\n| `schema`           | Get the schema of the DataFrame                                             |\n| `is_empty`         | Return whether the DataFrame is empty                                       |\n| `fill_null`        | Fill null values using the specified value or strategy                      |\n| `null_count`       | Return the number of null values in the DataFrame                           |\n| `cast`             | Cast DataFrame column(s) to the specified dtype(s)                          |\n\n### Series Methods\n\n| Method             | Description                                                                 |\n|--------------------|-----------------------------------------------------------------------------|\n| `new`              | Create a new Series                                                         |\n| `data`             | Get the data of the Series                                                  |\n| `erase`            | Erase an element from the Series                                            |\n| `sort`             | Sort the SeriesData in Series and return the indices of the sorted elements |\n| `+`                | Add two Series                                                              |\n| `-`                | Subtract two Series                                                         |\n| `*`                | Multiply two Series                                                         |\n| `/`                | Divide two Series                                                           |\n| `mean`             | Calculate the mean of the Series                                            |\n| `var`              | Calculate the variance of the Series                                        |\n| `argsort`          | Return the indices that would sort the Series                               |\n| `copy`             | Create a copy of the Series                                                 |\n| `count`            | Count the number of elements in the Series                                  |\n| `get_type`         | Get the type of the Series                                                  |\n| `max`              | Get the maximum value of the Series                                         |\n| `merge`            | Merge two Series                                                            |\n| `min`              | Get the minimum value of the Series                                         |\n| `name`             | Get the name of the Series                                                  |\n| `reverse`          | Reverse the order of elements in the Series                                 |\n| `sum`              | Calculate the sum of the Series                                             |\n| `abs`              | Return a new Series with the absolute value of each element                 |\n| `acos`             | Return a new Series with the arccos of each element                         |\n| `all`              | Return whether all non-null elements in the Series are true                 |\n| `any`              | Return whether any non-null element in the Series is true                   |\n| `append`           | Append another Series to the current one and return a new Series            |\n| `clear`            | Remove all elements from the current Series                                 |\n| `concat`           | Concatenate multiple Series and return the result                           |\n| `cos`              | Return a new Series with the cosine of each element                         |\n| `extend`           | Extend the current Series in-place with another Series                      |\n| `has_null`         | Check if the current Series contains any null values                        |\n| `is_empty`         | Check if the current Series is empty                                        |\n| `is_not_null`      | Return a boolean Series indicating non-null elements                        |\n| `is_null`          | Return a boolean Series indicating null elements                            |\n| `is_sorted`        | Check if the current Series is sorted                                       |\n| `length`           | Return the length of the current Series                                     |\n| `log`              | Return a new Series with the logarithm of each element                      |\n| `log10`            | Return a new Series with the base-10 log of each element                    |\n| `lower_bound`      | Return a new Series with each element replaced by the lower bound           |\n| `n_unique`         | Return the number of unique elements in the Series                          |\n| `not_`             | Return the logical NOT of a boolean Series                                  |\n| `null_count`       | Return the count of null values in the Series                               |\n| `op_get`           | Return the element at a given index in the Series                           |\n| `sin`              | Return a new Series with the sine of each element                           |\n| `tan`              | Return a new Series with the tangent of each element                        |\n| `unique_counts`    | Return a new Series showing the count of each unique value                  |\n| `upper_bound`      | Return a new Series with each element replaced by the upper bound           |\n| `slice`            | Return a new Series containing elements in the specified range             |\n\n## Contributing\nIssues and pull requests are welcome. Please make sure to run all tests before submitting.\n\n## Contact\nIf you have questions, feel free to open an issue in the repository. For other inquiries, contact me via email: [2421342308a@gmail.com].\n\n## License\nThis project is licensed under the Apache-2.0 License. See the LICENSE file for details.",
  "module_index": "smallbearrr/pandas/module_index.json"
}